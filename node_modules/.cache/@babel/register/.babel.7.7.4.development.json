{
  "{\"sourceRoot\":\"/Users/aa/rn_applications/nodeTestOcr/src\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"/Users/aa/rn_applications/nodeTestOcr\",\"filename\":\"/Users/aa/rn_applications/nodeTestOcr/src/index.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/Users/aa/rn_applications/nodeTestOcr\",\"plugins\":[],\"presets\":[]}:7.7.4:development": {
    "metadata": {},
    "options": {
      "sourceRoot": "/Users/aa/rn_applications/nodeTestOcr/src",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "/Users/aa/rn_applications/nodeTestOcr",
      "filename": "/Users/aa/rn_applications/nodeTestOcr/src/index.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "/Users/aa/rn_applications/nodeTestOcr",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/Users/aa/rn_applications/nodeTestOcr/src/index.js",
        "plugins": []
      },
      "generatorOpts": {
        "filename": "/Users/aa/rn_applications/nodeTestOcr/src/index.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/Users/aa/rn_applications/nodeTestOcr/src",
        "sourceFileName": "index.js"
      }
    },
    "ast": null,
    "code": "import express from 'express';\nimport bodyParser from 'body-parser';\nimport mongoose from 'mongoose'; // auth\n// logging\n\nimport debug from 'debug';\nimport morgan from 'morgan';\nimport cors from 'cors'; // env\n\nimport * as dotEnv from 'dotenv'; // models\n\ndotEnv.config();\nconst {\n  PORT,\n  MONGODB_URI,\n  SECRET_KEY\n} = process.env;\nconst port = PORT || 5000;\nconst mongodb_uri = MONGODB_URI || 'mongodb://localhost:27017/zones';\nconst app = express();\nconst debugApp = debug('app'); // app.options(\"/*\", function (req, res, next) {\n//     res.header('Access-Control-Allow-Origin', '*');\n//     res.header('Access-Control-Allow-Methods', 'GET,PUT,POST,DELETE,OPTIONS');\n//     res.header('Access-Control-Allow-Headers', 'Content-Type, Authorization, Content-Length, X-Requested-With');\n//     res.sendStatus(200);\n// });\n\n/**\n * connecting to mongodb\n * run mongodb (OS X terminal): mongod\n */\n\nmongoose.connect(mongodb_uri, {\n  useNewUrlParser: true,\n  useCreateIndex: true,\n  useUnifiedTopology: true\n}).then(() => debugApp('Connected Successfully to mongodb')).catch(() => debugApp(\"Can't connect to mongodb\"));\n/**\n * middlewares\n */\n\napp.use(morgan('tiny'));\napp.use(cors());\napp.use(bodyParser.json());\napp.use(bodyParser.urlencoded({\n  // extended: true, // false\n  extended: false\n}));\n/**\n * passport middleware\n */\n\n/**\n * routes\n */\n\napp.use('/api/client', Terr(passport));\n/**\n * Error handling\n */\n\napp.use((err, req, res, next) => {\n  // treat as 404\n  if (err.message && (~err.message.indexOf('not found') || ~err.message.indexOf('Cast to ObjectId failed'))) {\n    return next();\n  }\n\n  console.error(err.stack); // error page\n\n  res.status(500).send(err.message);\n});\n/**\n * assume 404 since no middleware responded\n */\n\napp.use((req, res, next) => {\n  res.status(404).send('not found');\n});\n/**\n * Listening to requests\n */\n\napp.listen(port, () => debugApp(`app listening on port ${port}!`));\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImluZGV4LmpzIl0sIm5hbWVzIjpbImV4cHJlc3MiLCJib2R5UGFyc2VyIiwibW9uZ29vc2UiLCJkZWJ1ZyIsIm1vcmdhbiIsImNvcnMiLCJkb3RFbnYiLCJjb25maWciLCJQT1JUIiwiTU9OR09EQl9VUkkiLCJTRUNSRVRfS0VZIiwicHJvY2VzcyIsImVudiIsInBvcnQiLCJtb25nb2RiX3VyaSIsImFwcCIsImRlYnVnQXBwIiwiY29ubmVjdCIsInVzZU5ld1VybFBhcnNlciIsInVzZUNyZWF0ZUluZGV4IiwidXNlVW5pZmllZFRvcG9sb2d5IiwidGhlbiIsImNhdGNoIiwidXNlIiwianNvbiIsInVybGVuY29kZWQiLCJleHRlbmRlZCIsIlRlcnIiLCJwYXNzcG9ydCIsImVyciIsInJlcSIsInJlcyIsIm5leHQiLCJtZXNzYWdlIiwiaW5kZXhPZiIsImNvbnNvbGUiLCJlcnJvciIsInN0YWNrIiwic3RhdHVzIiwic2VuZCIsImxpc3RlbiJdLCJtYXBwaW5ncyI6IkFBQUEsT0FBT0EsT0FBUCxNQUFvQixTQUFwQjtBQUNBLE9BQU9DLFVBQVAsTUFBdUIsYUFBdkI7QUFDQSxPQUFPQyxRQUFQLE1BQXFCLFVBQXJCLEMsQ0FDQTtBQUNBOztBQUNBLE9BQU9DLEtBQVAsTUFBa0IsT0FBbEI7QUFDQSxPQUFPQyxNQUFQLE1BQW1CLFFBQW5CO0FBQ0EsT0FBT0MsSUFBUCxNQUFpQixNQUFqQixDLENBQ0E7O0FBQ0EsT0FBTyxLQUFLQyxNQUFaLE1BQXdCLFFBQXhCLEMsQ0FDQTs7QUFHQUEsTUFBTSxDQUFDQyxNQUFQO0FBRUEsTUFBTTtBQUFDQyxFQUFBQSxJQUFEO0FBQU9DLEVBQUFBLFdBQVA7QUFBb0JDLEVBQUFBO0FBQXBCLElBQWtDQyxPQUFPLENBQUNDLEdBQWhEO0FBQ0EsTUFBTUMsSUFBSSxHQUFHTCxJQUFJLElBQUksSUFBckI7QUFDQSxNQUFNTSxXQUFXLEdBQUdMLFdBQVcsSUFBSSxpQ0FBbkM7QUFFQSxNQUFNTSxHQUFHLEdBQUdmLE9BQU8sRUFBbkI7QUFDQSxNQUFNZ0IsUUFBUSxHQUFHYixLQUFLLENBQUMsS0FBRCxDQUF0QixDLENBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBOzs7OztBQUlBRCxRQUFRLENBQUNlLE9BQVQsQ0FDSUgsV0FESixFQUVJO0FBQ0lJLEVBQUFBLGVBQWUsRUFBRSxJQURyQjtBQUVJQyxFQUFBQSxjQUFjLEVBQUUsSUFGcEI7QUFHSUMsRUFBQUEsa0JBQWtCLEVBQUU7QUFIeEIsQ0FGSixFQVFLQyxJQVJMLENBUVUsTUFBTUwsUUFBUSxDQUFDLG1DQUFELENBUnhCLEVBU0tNLEtBVEwsQ0FTVyxNQUFNTixRQUFRLENBQUMsMEJBQUQsQ0FUekI7QUFZQTs7OztBQUdBRCxHQUFHLENBQUNRLEdBQUosQ0FBUW5CLE1BQU0sQ0FBQyxNQUFELENBQWQ7QUFDQVcsR0FBRyxDQUFDUSxHQUFKLENBQVFsQixJQUFJLEVBQVo7QUFDQVUsR0FBRyxDQUFDUSxHQUFKLENBQVF0QixVQUFVLENBQUN1QixJQUFYLEVBQVI7QUFDQVQsR0FBRyxDQUFDUSxHQUFKLENBQ0l0QixVQUFVLENBQUN3QixVQUFYLENBQXNCO0FBQ2xCO0FBQ0FDLEVBQUFBLFFBQVEsRUFBRTtBQUZRLENBQXRCLENBREo7QUFPQTs7OztBQUlBOzs7O0FBR0FYLEdBQUcsQ0FBQ1EsR0FBSixDQUFRLGFBQVIsRUFBdUJJLElBQUksQ0FBQ0MsUUFBRCxDQUEzQjtBQUdBOzs7O0FBR0FiLEdBQUcsQ0FBQ1EsR0FBSixDQUFRLENBQUNNLEdBQUQsRUFBTUMsR0FBTixFQUFXQyxHQUFYLEVBQWdCQyxJQUFoQixLQUF5QjtBQUM3QjtBQUNBLE1BQUlILEdBQUcsQ0FBQ0ksT0FBSixLQUFnQixDQUFDSixHQUFHLENBQUNJLE9BQUosQ0FBWUMsT0FBWixDQUFvQixXQUFwQixDQUFELElBQXNDLENBQUNMLEdBQUcsQ0FBQ0ksT0FBSixDQUFZQyxPQUFaLENBQW9CLHlCQUFwQixDQUF2RCxDQUFKLEVBQTZHO0FBQ3pHLFdBQU9GLElBQUksRUFBWDtBQUNIOztBQUNERyxFQUFBQSxPQUFPLENBQUNDLEtBQVIsQ0FBY1AsR0FBRyxDQUFDUSxLQUFsQixFQUw2QixDQU03Qjs7QUFDQU4sRUFBQUEsR0FBRyxDQUFDTyxNQUFKLENBQVcsR0FBWCxFQUFnQkMsSUFBaEIsQ0FDSVYsR0FBRyxDQUFDSSxPQURSO0FBR0gsQ0FWRDtBQVlBOzs7O0FBR0FsQixHQUFHLENBQUNRLEdBQUosQ0FBUSxDQUFDTyxHQUFELEVBQU1DLEdBQU4sRUFBV0MsSUFBWCxLQUFvQjtBQUN4QkQsRUFBQUEsR0FBRyxDQUFDTyxNQUFKLENBQVcsR0FBWCxFQUFnQkMsSUFBaEIsQ0FDSSxXQURKO0FBR0gsQ0FKRDtBQU1BOzs7O0FBR0F4QixHQUFHLENBQUN5QixNQUFKLENBQVczQixJQUFYLEVBQWlCLE1BQU1HLFFBQVEsQ0FBRSx5QkFBd0JILElBQUssR0FBL0IsQ0FBL0IiLCJzb3VyY2VSb290IjoiL1VzZXJzL2FhL3JuX2FwcGxpY2F0aW9ucy9ub2RlVGVzdE9jci9zcmMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgZXhwcmVzcyBmcm9tICdleHByZXNzJztcbmltcG9ydCBib2R5UGFyc2VyIGZyb20gJ2JvZHktcGFyc2VyJztcbmltcG9ydCBtb25nb29zZSBmcm9tICdtb25nb29zZSc7XG4vLyBhdXRoXG4vLyBsb2dnaW5nXG5pbXBvcnQgZGVidWcgZnJvbSAnZGVidWcnO1xuaW1wb3J0IG1vcmdhbiBmcm9tICdtb3JnYW4nO1xuaW1wb3J0IGNvcnMgZnJvbSAnY29ycyc7XG4vLyBlbnZcbmltcG9ydCAqIGFzIGRvdEVudiBmcm9tICdkb3RlbnYnO1xuLy8gbW9kZWxzXG5cblxuZG90RW52LmNvbmZpZygpO1xuXG5jb25zdCB7UE9SVCwgTU9OR09EQl9VUkksIFNFQ1JFVF9LRVl9ID0gcHJvY2Vzcy5lbnY7XG5jb25zdCBwb3J0ID0gUE9SVCB8fCA1MDAwO1xuY29uc3QgbW9uZ29kYl91cmkgPSBNT05HT0RCX1VSSSB8fCAnbW9uZ29kYjovL2xvY2FsaG9zdDoyNzAxNy96b25lcyc7XG5cbmNvbnN0IGFwcCA9IGV4cHJlc3MoKTtcbmNvbnN0IGRlYnVnQXBwID0gZGVidWcoJ2FwcCcpO1xuLy8gYXBwLm9wdGlvbnMoXCIvKlwiLCBmdW5jdGlvbiAocmVxLCByZXMsIG5leHQpIHtcbi8vICAgICByZXMuaGVhZGVyKCdBY2Nlc3MtQ29udHJvbC1BbGxvdy1PcmlnaW4nLCAnKicpO1xuLy8gICAgIHJlcy5oZWFkZXIoJ0FjY2Vzcy1Db250cm9sLUFsbG93LU1ldGhvZHMnLCAnR0VULFBVVCxQT1NULERFTEVURSxPUFRJT05TJyk7XG4vLyAgICAgcmVzLmhlYWRlcignQWNjZXNzLUNvbnRyb2wtQWxsb3ctSGVhZGVycycsICdDb250ZW50LVR5cGUsIEF1dGhvcml6YXRpb24sIENvbnRlbnQtTGVuZ3RoLCBYLVJlcXVlc3RlZC1XaXRoJyk7XG4vLyAgICAgcmVzLnNlbmRTdGF0dXMoMjAwKTtcbi8vIH0pO1xuXG4vKipcbiAqIGNvbm5lY3RpbmcgdG8gbW9uZ29kYlxuICogcnVuIG1vbmdvZGIgKE9TIFggdGVybWluYWwpOiBtb25nb2RcbiAqL1xubW9uZ29vc2UuY29ubmVjdChcbiAgICBtb25nb2RiX3VyaSxcbiAgICB7XG4gICAgICAgIHVzZU5ld1VybFBhcnNlcjogdHJ1ZSxcbiAgICAgICAgdXNlQ3JlYXRlSW5kZXg6IHRydWUsXG4gICAgICAgIHVzZVVuaWZpZWRUb3BvbG9neTogdHJ1ZSxcbiAgICB9XG4pXG4gICAgLnRoZW4oKCkgPT4gZGVidWdBcHAoJ0Nvbm5lY3RlZCBTdWNjZXNzZnVsbHkgdG8gbW9uZ29kYicpKVxuICAgIC5jYXRjaCgoKSA9PiBkZWJ1Z0FwcChcIkNhbid0IGNvbm5lY3QgdG8gbW9uZ29kYlwiKSk7XG5cblxuLyoqXG4gKiBtaWRkbGV3YXJlc1xuICovXG5hcHAudXNlKG1vcmdhbigndGlueScpKTtcbmFwcC51c2UoY29ycygpKTtcbmFwcC51c2UoYm9keVBhcnNlci5qc29uKCkpO1xuYXBwLnVzZShcbiAgICBib2R5UGFyc2VyLnVybGVuY29kZWQoe1xuICAgICAgICAvLyBleHRlbmRlZDogdHJ1ZSwgLy8gZmFsc2VcbiAgICAgICAgZXh0ZW5kZWQ6IGZhbHNlLFxuICAgIH0pXG4pO1xuXG4vKipcbiAqIHBhc3Nwb3J0IG1pZGRsZXdhcmVcbiAqL1xuXG4vKipcbiAqIHJvdXRlc1xuICovXG5hcHAudXNlKCcvYXBpL2NsaWVudCcsIFRlcnIocGFzc3BvcnQpKTtcblxuXG4vKipcbiAqIEVycm9yIGhhbmRsaW5nXG4gKi9cbmFwcC51c2UoKGVyciwgcmVxLCByZXMsIG5leHQpID0+IHtcbiAgICAvLyB0cmVhdCBhcyA0MDRcbiAgICBpZiAoZXJyLm1lc3NhZ2UgJiYgKH5lcnIubWVzc2FnZS5pbmRleE9mKCdub3QgZm91bmQnKSB8fCAofmVyci5tZXNzYWdlLmluZGV4T2YoJ0Nhc3QgdG8gT2JqZWN0SWQgZmFpbGVkJykpKSkge1xuICAgICAgICByZXR1cm4gbmV4dCgpO1xuICAgIH1cbiAgICBjb25zb2xlLmVycm9yKGVyci5zdGFjayk7XG4gICAgLy8gZXJyb3IgcGFnZVxuICAgIHJlcy5zdGF0dXMoNTAwKS5zZW5kKFxuICAgICAgICBlcnIubWVzc2FnZSxcbiAgICApO1xufSk7XG5cbi8qKlxuICogYXNzdW1lIDQwNCBzaW5jZSBubyBtaWRkbGV3YXJlIHJlc3BvbmRlZFxuICovXG5hcHAudXNlKChyZXEsIHJlcywgbmV4dCkgPT4ge1xuICAgIHJlcy5zdGF0dXMoNDA0KS5zZW5kKFxuICAgICAgICAnbm90IGZvdW5kJ1xuICAgICk7XG59KTtcblxuLyoqXG4gKiBMaXN0ZW5pbmcgdG8gcmVxdWVzdHNcbiAqL1xuYXBwLmxpc3Rlbihwb3J0LCAoKSA9PiBkZWJ1Z0FwcChgYXBwIGxpc3RlbmluZyBvbiBwb3J0ICR7cG9ydH0hYCkpO1xuXG4iXX0=",
    "map": {
      "version": 3,
      "sources": [
        "index.js"
      ],
      "names": [
        "express",
        "bodyParser",
        "mongoose",
        "debug",
        "morgan",
        "cors",
        "dotEnv",
        "config",
        "PORT",
        "MONGODB_URI",
        "SECRET_KEY",
        "process",
        "env",
        "port",
        "mongodb_uri",
        "app",
        "debugApp",
        "connect",
        "useNewUrlParser",
        "useCreateIndex",
        "useUnifiedTopology",
        "then",
        "catch",
        "use",
        "json",
        "urlencoded",
        "extended",
        "Terr",
        "passport",
        "err",
        "req",
        "res",
        "next",
        "message",
        "indexOf",
        "console",
        "error",
        "stack",
        "status",
        "send",
        "listen"
      ],
      "mappings": "AAAA,OAAOA,OAAP,MAAoB,SAApB;AACA,OAAOC,UAAP,MAAuB,aAAvB;AACA,OAAOC,QAAP,MAAqB,UAArB,C,CACA;AACA;;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,MAAP,MAAmB,QAAnB;AACA,OAAOC,IAAP,MAAiB,MAAjB,C,CACA;;AACA,OAAO,KAAKC,MAAZ,MAAwB,QAAxB,C,CACA;;AAGAA,MAAM,CAACC,MAAP;AAEA,MAAM;AAACC,EAAAA,IAAD;AAAOC,EAAAA,WAAP;AAAoBC,EAAAA;AAApB,IAAkCC,OAAO,CAACC,GAAhD;AACA,MAAMC,IAAI,GAAGL,IAAI,IAAI,IAArB;AACA,MAAMM,WAAW,GAAGL,WAAW,IAAI,iCAAnC;AAEA,MAAMM,GAAG,GAAGf,OAAO,EAAnB;AACA,MAAMgB,QAAQ,GAAGb,KAAK,CAAC,KAAD,CAAtB,C,CACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;;;;AAIAD,QAAQ,CAACe,OAAT,CACIH,WADJ,EAEI;AACII,EAAAA,eAAe,EAAE,IADrB;AAEIC,EAAAA,cAAc,EAAE,IAFpB;AAGIC,EAAAA,kBAAkB,EAAE;AAHxB,CAFJ,EAQKC,IARL,CAQU,MAAML,QAAQ,CAAC,mCAAD,CARxB,EASKM,KATL,CASW,MAAMN,QAAQ,CAAC,0BAAD,CATzB;AAYA;;;;AAGAD,GAAG,CAACQ,GAAJ,CAAQnB,MAAM,CAAC,MAAD,CAAd;AACAW,GAAG,CAACQ,GAAJ,CAAQlB,IAAI,EAAZ;AACAU,GAAG,CAACQ,GAAJ,CAAQtB,UAAU,CAACuB,IAAX,EAAR;AACAT,GAAG,CAACQ,GAAJ,CACItB,UAAU,CAACwB,UAAX,CAAsB;AAClB;AACAC,EAAAA,QAAQ,EAAE;AAFQ,CAAtB,CADJ;AAOA;;;;AAIA;;;;AAGAX,GAAG,CAACQ,GAAJ,CAAQ,aAAR,EAAuBI,IAAI,CAACC,QAAD,CAA3B;AAGA;;;;AAGAb,GAAG,CAACQ,GAAJ,CAAQ,CAACM,GAAD,EAAMC,GAAN,EAAWC,GAAX,EAAgBC,IAAhB,KAAyB;AAC7B;AACA,MAAIH,GAAG,CAACI,OAAJ,KAAgB,CAACJ,GAAG,CAACI,OAAJ,CAAYC,OAAZ,CAAoB,WAApB,CAAD,IAAsC,CAACL,GAAG,CAACI,OAAJ,CAAYC,OAAZ,CAAoB,yBAApB,CAAvD,CAAJ,EAA6G;AACzG,WAAOF,IAAI,EAAX;AACH;;AACDG,EAAAA,OAAO,CAACC,KAAR,CAAcP,GAAG,CAACQ,KAAlB,EAL6B,CAM7B;;AACAN,EAAAA,GAAG,CAACO,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CACIV,GAAG,CAACI,OADR;AAGH,CAVD;AAYA;;;;AAGAlB,GAAG,CAACQ,GAAJ,CAAQ,CAACO,GAAD,EAAMC,GAAN,EAAWC,IAAX,KAAoB;AACxBD,EAAAA,GAAG,CAACO,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CACI,WADJ;AAGH,CAJD;AAMA;;;;AAGAxB,GAAG,CAACyB,MAAJ,CAAW3B,IAAX,EAAiB,MAAMG,QAAQ,CAAE,yBAAwBH,IAAK,GAA/B,CAA/B",
      "sourceRoot": "/Users/aa/rn_applications/nodeTestOcr/src",
      "sourcesContent": [
        "import express from 'express';\nimport bodyParser from 'body-parser';\nimport mongoose from 'mongoose';\n// auth\n// logging\nimport debug from 'debug';\nimport morgan from 'morgan';\nimport cors from 'cors';\n// env\nimport * as dotEnv from 'dotenv';\n// models\n\n\ndotEnv.config();\n\nconst {PORT, MONGODB_URI, SECRET_KEY} = process.env;\nconst port = PORT || 5000;\nconst mongodb_uri = MONGODB_URI || 'mongodb://localhost:27017/zones';\n\nconst app = express();\nconst debugApp = debug('app');\n// app.options(\"/*\", function (req, res, next) {\n//     res.header('Access-Control-Allow-Origin', '*');\n//     res.header('Access-Control-Allow-Methods', 'GET,PUT,POST,DELETE,OPTIONS');\n//     res.header('Access-Control-Allow-Headers', 'Content-Type, Authorization, Content-Length, X-Requested-With');\n//     res.sendStatus(200);\n// });\n\n/**\n * connecting to mongodb\n * run mongodb (OS X terminal): mongod\n */\nmongoose.connect(\n    mongodb_uri,\n    {\n        useNewUrlParser: true,\n        useCreateIndex: true,\n        useUnifiedTopology: true,\n    }\n)\n    .then(() => debugApp('Connected Successfully to mongodb'))\n    .catch(() => debugApp(\"Can't connect to mongodb\"));\n\n\n/**\n * middlewares\n */\napp.use(morgan('tiny'));\napp.use(cors());\napp.use(bodyParser.json());\napp.use(\n    bodyParser.urlencoded({\n        // extended: true, // false\n        extended: false,\n    })\n);\n\n/**\n * passport middleware\n */\n\n/**\n * routes\n */\napp.use('/api/client', Terr(passport));\n\n\n/**\n * Error handling\n */\napp.use((err, req, res, next) => {\n    // treat as 404\n    if (err.message && (~err.message.indexOf('not found') || (~err.message.indexOf('Cast to ObjectId failed')))) {\n        return next();\n    }\n    console.error(err.stack);\n    // error page\n    res.status(500).send(\n        err.message,\n    );\n});\n\n/**\n * assume 404 since no middleware responded\n */\napp.use((req, res, next) => {\n    res.status(404).send(\n        'not found'\n    );\n});\n\n/**\n * Listening to requests\n */\napp.listen(port, () => debugApp(`app listening on port ${port}!`));\n\n"
      ]
    },
    "sourceType": "module",
    "mtime": 1575449552283
  },
  "{\"sourceRoot\":\"/Users/aa/rn_applications/nodeTestOcr/src\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"/Users/aa/rn_applications/nodeTestOcr\",\"filename\":\"/Users/aa/rn_applications/nodeTestOcr/src/index.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/Users/aa/rn_applications/nodeTestOcr\",\"plugins\":[{\"key\":\"transform-runtime\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"MemberExpression\":{\"enter\":[null],\"exit\":[null]},\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.7.4:development": {
    "metadata": {},
    "options": {
      "sourceRoot": "/Users/aa/rn_applications/nodeTestOcr/src",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "/Users/aa/rn_applications/nodeTestOcr",
      "filename": "/Users/aa/rn_applications/nodeTestOcr/src/index.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "/Users/aa/rn_applications/nodeTestOcr",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "transform-runtime",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "MemberExpression": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {}
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/Users/aa/rn_applications/nodeTestOcr/src/index.js",
        "plugins": [
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "/Users/aa/rn_applications/nodeTestOcr/src/index.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/Users/aa/rn_applications/nodeTestOcr/src",
        "sourceFileName": "index.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nvar _interopRequireWildcard = require(\"@babel/runtime/helpers/interopRequireWildcard\");\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nvar _express = _interopRequireDefault(require(\"express\"));\n\nvar _bodyParser = _interopRequireDefault(require(\"body-parser\"));\n\nvar _mongoose = _interopRequireDefault(require(\"mongoose\"));\n\nvar _debug = _interopRequireDefault(require(\"debug\"));\n\nvar _morgan = _interopRequireDefault(require(\"morgan\"));\n\nvar _cors = _interopRequireDefault(require(\"cors\"));\n\nvar dotEnv = _interopRequireWildcard(require(\"dotenv\"));\n\nvar _TesseractRoutes = _interopRequireDefault(require(\"./routes/TesseractRoutes\"));\n\n// auth\n// logging\n// env\n// models\ndotEnv.config();\nvar _process$env = process.env,\n    PORT = _process$env.PORT,\n    MONGODB_URI = _process$env.MONGODB_URI;\nvar port = PORT || 5000;\nvar mongodb_uri = MONGODB_URI;\nconsole.log('mongodb_uri', mongodb_uri); //const mongodb_uri =   'mongodb://localhost:27017/ocr';\n\nvar app = (0, _express[\"default\"])();\nvar debugApp = (0, _debug[\"default\"])('app'); // app.options(\"/*\", function (req, res, next) {\n//     res.header('Access-Control-Allow-Origin', '*');\n//     res.header('Access-Control-Allow-Methods', 'GET,PUT,POST,DELETE,OPTIONS');\n//     res.header('Access-Control-Allow-Headers', 'Content-Type, Authorization, Content-Length, X-Requested-With');\n//     res.sendStatus(200);\n// });\n\n/**\n * connecting to mongodb\n * run mongodb (OS X terminal): mongod\n */\n\n_mongoose[\"default\"].connect(mongodb_uri, {\n  useNewUrlParser: true,\n  useCreateIndex: true,\n  useUnifiedTopology: true\n}).then(function () {\n  return debugApp('Connected Successfully to mongodb');\n})[\"catch\"](function () {\n  return debugApp(\"Can't connect to mongodb\");\n});\n/**\n * middlewares\n */\n\n\napp.use((0, _morgan[\"default\"])('tiny'));\napp.use((0, _cors[\"default\"])());\napp.use(_bodyParser[\"default\"].json());\napp.use(_bodyParser[\"default\"].urlencoded({\n  // extended: true, // false\n  extended: false\n}));\n/**\n * passport middleware\n */\n\n/**\n * routes\n */\n\napp.use('/api/tessarect', (0, _TesseractRoutes[\"default\"])());\n/**\n * Error handling\n */\n\napp.use(function (err, req, res, next) {\n  // treat as 404\n  if (err.message && (~err.message.indexOf('not found') || ~err.message.indexOf('Cast to ObjectId failed'))) {\n    return next();\n  }\n\n  console.error(err.stack); // error page\n\n  res.status(500).send(err.message);\n});\n/**\n * assume 404 since no middleware responded\n */\n\napp.use(function (req, res, next) {\n  res.status(404).send('not found');\n});\n/**\n * Listening to requests\n */\n\napp.listen(port, function () {\n  return debugApp(\"app listening on port \".concat(port, \"!\"));\n});\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImluZGV4LmpzIl0sIm5hbWVzIjpbImRvdEVudiIsImNvbmZpZyIsInByb2Nlc3MiLCJlbnYiLCJQT1JUIiwiTU9OR09EQl9VUkkiLCJwb3J0IiwibW9uZ29kYl91cmkiLCJjb25zb2xlIiwibG9nIiwiYXBwIiwiZGVidWdBcHAiLCJtb25nb29zZSIsImNvbm5lY3QiLCJ1c2VOZXdVcmxQYXJzZXIiLCJ1c2VDcmVhdGVJbmRleCIsInVzZVVuaWZpZWRUb3BvbG9neSIsInRoZW4iLCJ1c2UiLCJib2R5UGFyc2VyIiwianNvbiIsInVybGVuY29kZWQiLCJleHRlbmRlZCIsImVyciIsInJlcSIsInJlcyIsIm5leHQiLCJtZXNzYWdlIiwiaW5kZXhPZiIsImVycm9yIiwic3RhY2siLCJzdGF0dXMiLCJzZW5kIiwibGlzdGVuIl0sIm1hcHBpbmdzIjoiOzs7Ozs7QUFBQTs7QUFDQTs7QUFDQTs7QUFHQTs7QUFDQTs7QUFDQTs7QUFFQTs7QUFDQTs7QUFQQTtBQUNBO0FBSUE7QUFHQTtBQUdBQSxNQUFNLENBQUNDLE1BQVA7bUJBRTRCQyxPQUFPLENBQUNDLEc7SUFBN0JDLEksZ0JBQUFBLEk7SUFBTUMsVyxnQkFBQUEsVztBQUNiLElBQU1DLElBQUksR0FBR0YsSUFBSSxJQUFJLElBQXJCO0FBQ0EsSUFBTUcsV0FBVyxHQUFHRixXQUFwQjtBQUNBRyxPQUFPLENBQUNDLEdBQVIsQ0FBWSxhQUFaLEVBQTBCRixXQUExQixFLENBQ0E7O0FBRUEsSUFBTUcsR0FBRyxHQUFHLDBCQUFaO0FBQ0EsSUFBTUMsUUFBUSxHQUFHLHVCQUFNLEtBQU4sQ0FBakIsQyxDQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTs7Ozs7QUFJQUMscUJBQVNDLE9BQVQsQ0FDSU4sV0FESixFQUVJO0FBQ0lPLEVBQUFBLGVBQWUsRUFBRSxJQURyQjtBQUVJQyxFQUFBQSxjQUFjLEVBQUUsSUFGcEI7QUFHSUMsRUFBQUEsa0JBQWtCLEVBQUU7QUFIeEIsQ0FGSixFQVFLQyxJQVJMLENBUVU7QUFBQSxTQUFNTixRQUFRLENBQUMsbUNBQUQsQ0FBZDtBQUFBLENBUlYsV0FTVztBQUFBLFNBQU1BLFFBQVEsQ0FBQywwQkFBRCxDQUFkO0FBQUEsQ0FUWDtBQVlBOzs7OztBQUdBRCxHQUFHLENBQUNRLEdBQUosQ0FBUSx3QkFBTyxNQUFQLENBQVI7QUFDQVIsR0FBRyxDQUFDUSxHQUFKLENBQVEsdUJBQVI7QUFDQVIsR0FBRyxDQUFDUSxHQUFKLENBQVFDLHVCQUFXQyxJQUFYLEVBQVI7QUFDQVYsR0FBRyxDQUFDUSxHQUFKLENBQ0lDLHVCQUFXRSxVQUFYLENBQXNCO0FBQ2xCO0FBQ0FDLEVBQUFBLFFBQVEsRUFBRTtBQUZRLENBQXRCLENBREo7QUFPQTs7OztBQUlBOzs7O0FBR0FaLEdBQUcsQ0FBQ1EsR0FBSixDQUFRLGdCQUFSLEVBQTBCLGtDQUExQjtBQUdBOzs7O0FBR0FSLEdBQUcsQ0FBQ1EsR0FBSixDQUFRLFVBQUNLLEdBQUQsRUFBTUMsR0FBTixFQUFXQyxHQUFYLEVBQWdCQyxJQUFoQixFQUF5QjtBQUM3QjtBQUNBLE1BQUlILEdBQUcsQ0FBQ0ksT0FBSixLQUFnQixDQUFDSixHQUFHLENBQUNJLE9BQUosQ0FBWUMsT0FBWixDQUFvQixXQUFwQixDQUFELElBQXNDLENBQUNMLEdBQUcsQ0FBQ0ksT0FBSixDQUFZQyxPQUFaLENBQW9CLHlCQUFwQixDQUF2RCxDQUFKLEVBQTZHO0FBQ3pHLFdBQU9GLElBQUksRUFBWDtBQUNIOztBQUNEbEIsRUFBQUEsT0FBTyxDQUFDcUIsS0FBUixDQUFjTixHQUFHLENBQUNPLEtBQWxCLEVBTDZCLENBTTdCOztBQUNBTCxFQUFBQSxHQUFHLENBQUNNLE1BQUosQ0FBVyxHQUFYLEVBQWdCQyxJQUFoQixDQUNJVCxHQUFHLENBQUNJLE9BRFI7QUFHSCxDQVZEO0FBWUE7Ozs7QUFHQWpCLEdBQUcsQ0FBQ1EsR0FBSixDQUFRLFVBQUNNLEdBQUQsRUFBTUMsR0FBTixFQUFXQyxJQUFYLEVBQW9CO0FBQ3hCRCxFQUFBQSxHQUFHLENBQUNNLE1BQUosQ0FBVyxHQUFYLEVBQWdCQyxJQUFoQixDQUNJLFdBREo7QUFHSCxDQUpEO0FBTUE7Ozs7QUFHQXRCLEdBQUcsQ0FBQ3VCLE1BQUosQ0FBVzNCLElBQVgsRUFBaUI7QUFBQSxTQUFNSyxRQUFRLGlDQUEwQkwsSUFBMUIsT0FBZDtBQUFBLENBQWpCIiwic291cmNlUm9vdCI6Ii9Vc2Vycy9hYS9ybl9hcHBsaWNhdGlvbnMvbm9kZVRlc3RPY3Ivc3JjIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IGV4cHJlc3MgZnJvbSAnZXhwcmVzcyc7XG5pbXBvcnQgYm9keVBhcnNlciBmcm9tICdib2R5LXBhcnNlcic7XG5pbXBvcnQgbW9uZ29vc2UgZnJvbSAnbW9uZ29vc2UnO1xuLy8gYXV0aFxuLy8gbG9nZ2luZ1xuaW1wb3J0IGRlYnVnIGZyb20gJ2RlYnVnJztcbmltcG9ydCBtb3JnYW4gZnJvbSAnbW9yZ2FuJztcbmltcG9ydCBjb3JzIGZyb20gJ2NvcnMnO1xuLy8gZW52XG5pbXBvcnQgKiBhcyBkb3RFbnYgZnJvbSAnZG90ZW52JztcbmltcG9ydCBUZXNzZXJhY3RSb3V0ZXMgZnJvbSBcIi4vcm91dGVzL1Rlc3NlcmFjdFJvdXRlc1wiO1xuLy8gbW9kZWxzXG5cblxuZG90RW52LmNvbmZpZygpO1xuXG5jb25zdCB7UE9SVCwgTU9OR09EQl9VUkl9ID0gcHJvY2Vzcy5lbnY7XG5jb25zdCBwb3J0ID0gUE9SVCB8fCA1MDAwO1xuY29uc3QgbW9uZ29kYl91cmkgPSBNT05HT0RCX1VSSSA7XG5jb25zb2xlLmxvZygnbW9uZ29kYl91cmknLG1vbmdvZGJfdXJpKTtcbi8vY29uc3QgbW9uZ29kYl91cmkgPSAgICdtb25nb2RiOi8vbG9jYWxob3N0OjI3MDE3L29jcic7XG5cbmNvbnN0IGFwcCA9IGV4cHJlc3MoKTtcbmNvbnN0IGRlYnVnQXBwID0gZGVidWcoJ2FwcCcpO1xuLy8gYXBwLm9wdGlvbnMoXCIvKlwiLCBmdW5jdGlvbiAocmVxLCByZXMsIG5leHQpIHtcbi8vICAgICByZXMuaGVhZGVyKCdBY2Nlc3MtQ29udHJvbC1BbGxvdy1PcmlnaW4nLCAnKicpO1xuLy8gICAgIHJlcy5oZWFkZXIoJ0FjY2Vzcy1Db250cm9sLUFsbG93LU1ldGhvZHMnLCAnR0VULFBVVCxQT1NULERFTEVURSxPUFRJT05TJyk7XG4vLyAgICAgcmVzLmhlYWRlcignQWNjZXNzLUNvbnRyb2wtQWxsb3ctSGVhZGVycycsICdDb250ZW50LVR5cGUsIEF1dGhvcml6YXRpb24sIENvbnRlbnQtTGVuZ3RoLCBYLVJlcXVlc3RlZC1XaXRoJyk7XG4vLyAgICAgcmVzLnNlbmRTdGF0dXMoMjAwKTtcbi8vIH0pO1xuXG4vKipcbiAqIGNvbm5lY3RpbmcgdG8gbW9uZ29kYlxuICogcnVuIG1vbmdvZGIgKE9TIFggdGVybWluYWwpOiBtb25nb2RcbiAqL1xubW9uZ29vc2UuY29ubmVjdChcbiAgICBtb25nb2RiX3VyaSxcbiAgICB7XG4gICAgICAgIHVzZU5ld1VybFBhcnNlcjogdHJ1ZSxcbiAgICAgICAgdXNlQ3JlYXRlSW5kZXg6IHRydWUsXG4gICAgICAgIHVzZVVuaWZpZWRUb3BvbG9neTogdHJ1ZSxcbiAgICB9XG4pXG4gICAgLnRoZW4oKCkgPT4gZGVidWdBcHAoJ0Nvbm5lY3RlZCBTdWNjZXNzZnVsbHkgdG8gbW9uZ29kYicpKVxuICAgIC5jYXRjaCgoKSA9PiBkZWJ1Z0FwcChcIkNhbid0IGNvbm5lY3QgdG8gbW9uZ29kYlwiKSk7XG5cblxuLyoqXG4gKiBtaWRkbGV3YXJlc1xuICovXG5hcHAudXNlKG1vcmdhbigndGlueScpKTtcbmFwcC51c2UoY29ycygpKTtcbmFwcC51c2UoYm9keVBhcnNlci5qc29uKCkpO1xuYXBwLnVzZShcbiAgICBib2R5UGFyc2VyLnVybGVuY29kZWQoe1xuICAgICAgICAvLyBleHRlbmRlZDogdHJ1ZSwgLy8gZmFsc2VcbiAgICAgICAgZXh0ZW5kZWQ6IGZhbHNlLFxuICAgIH0pXG4pO1xuXG4vKipcbiAqIHBhc3Nwb3J0IG1pZGRsZXdhcmVcbiAqL1xuXG4vKipcbiAqIHJvdXRlc1xuICovXG5hcHAudXNlKCcvYXBpL3Rlc3NhcmVjdCcsIFRlc3NlcmFjdFJvdXRlcygpKTtcblxuXG4vKipcbiAqIEVycm9yIGhhbmRsaW5nXG4gKi9cbmFwcC51c2UoKGVyciwgcmVxLCByZXMsIG5leHQpID0+IHtcbiAgICAvLyB0cmVhdCBhcyA0MDRcbiAgICBpZiAoZXJyLm1lc3NhZ2UgJiYgKH5lcnIubWVzc2FnZS5pbmRleE9mKCdub3QgZm91bmQnKSB8fCAofmVyci5tZXNzYWdlLmluZGV4T2YoJ0Nhc3QgdG8gT2JqZWN0SWQgZmFpbGVkJykpKSkge1xuICAgICAgICByZXR1cm4gbmV4dCgpO1xuICAgIH1cbiAgICBjb25zb2xlLmVycm9yKGVyci5zdGFjayk7XG4gICAgLy8gZXJyb3IgcGFnZVxuICAgIHJlcy5zdGF0dXMoNTAwKS5zZW5kKFxuICAgICAgICBlcnIubWVzc2FnZSxcbiAgICApO1xufSk7XG5cbi8qKlxuICogYXNzdW1lIDQwNCBzaW5jZSBubyBtaWRkbGV3YXJlIHJlc3BvbmRlZFxuICovXG5hcHAudXNlKChyZXEsIHJlcywgbmV4dCkgPT4ge1xuICAgIHJlcy5zdGF0dXMoNDA0KS5zZW5kKFxuICAgICAgICAnbm90IGZvdW5kJ1xuICAgICk7XG59KTtcblxuLyoqXG4gKiBMaXN0ZW5pbmcgdG8gcmVxdWVzdHNcbiAqL1xuYXBwLmxpc3Rlbihwb3J0LCAoKSA9PiBkZWJ1Z0FwcChgYXBwIGxpc3RlbmluZyBvbiBwb3J0ICR7cG9ydH0hYCkpO1xuXG4iXX0=",
    "map": {
      "version": 3,
      "sources": [
        "index.js"
      ],
      "names": [
        "dotEnv",
        "config",
        "process",
        "env",
        "PORT",
        "MONGODB_URI",
        "port",
        "mongodb_uri",
        "console",
        "log",
        "app",
        "debugApp",
        "mongoose",
        "connect",
        "useNewUrlParser",
        "useCreateIndex",
        "useUnifiedTopology",
        "then",
        "use",
        "bodyParser",
        "json",
        "urlencoded",
        "extended",
        "err",
        "req",
        "res",
        "next",
        "message",
        "indexOf",
        "error",
        "stack",
        "status",
        "send",
        "listen"
      ],
      "mappings": ";;;;;;AAAA;;AACA;;AACA;;AAGA;;AACA;;AACA;;AAEA;;AACA;;AAPA;AACA;AAIA;AAGA;AAGAA,MAAM,CAACC,MAAP;mBAE4BC,OAAO,CAACC,G;IAA7BC,I,gBAAAA,I;IAAMC,W,gBAAAA,W;AACb,IAAMC,IAAI,GAAGF,IAAI,IAAI,IAArB;AACA,IAAMG,WAAW,GAAGF,WAApB;AACAG,OAAO,CAACC,GAAR,CAAY,aAAZ,EAA0BF,WAA1B,E,CACA;;AAEA,IAAMG,GAAG,GAAG,0BAAZ;AACA,IAAMC,QAAQ,GAAG,uBAAM,KAAN,CAAjB,C,CACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;;;;AAIAC,qBAASC,OAAT,CACIN,WADJ,EAEI;AACIO,EAAAA,eAAe,EAAE,IADrB;AAEIC,EAAAA,cAAc,EAAE,IAFpB;AAGIC,EAAAA,kBAAkB,EAAE;AAHxB,CAFJ,EAQKC,IARL,CAQU;AAAA,SAAMN,QAAQ,CAAC,mCAAD,CAAd;AAAA,CARV,WASW;AAAA,SAAMA,QAAQ,CAAC,0BAAD,CAAd;AAAA,CATX;AAYA;;;;;AAGAD,GAAG,CAACQ,GAAJ,CAAQ,wBAAO,MAAP,CAAR;AACAR,GAAG,CAACQ,GAAJ,CAAQ,uBAAR;AACAR,GAAG,CAACQ,GAAJ,CAAQC,uBAAWC,IAAX,EAAR;AACAV,GAAG,CAACQ,GAAJ,CACIC,uBAAWE,UAAX,CAAsB;AAClB;AACAC,EAAAA,QAAQ,EAAE;AAFQ,CAAtB,CADJ;AAOA;;;;AAIA;;;;AAGAZ,GAAG,CAACQ,GAAJ,CAAQ,gBAAR,EAA0B,kCAA1B;AAGA;;;;AAGAR,GAAG,CAACQ,GAAJ,CAAQ,UAACK,GAAD,EAAMC,GAAN,EAAWC,GAAX,EAAgBC,IAAhB,EAAyB;AAC7B;AACA,MAAIH,GAAG,CAACI,OAAJ,KAAgB,CAACJ,GAAG,CAACI,OAAJ,CAAYC,OAAZ,CAAoB,WAApB,CAAD,IAAsC,CAACL,GAAG,CAACI,OAAJ,CAAYC,OAAZ,CAAoB,yBAApB,CAAvD,CAAJ,EAA6G;AACzG,WAAOF,IAAI,EAAX;AACH;;AACDlB,EAAAA,OAAO,CAACqB,KAAR,CAAcN,GAAG,CAACO,KAAlB,EAL6B,CAM7B;;AACAL,EAAAA,GAAG,CAACM,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CACIT,GAAG,CAACI,OADR;AAGH,CAVD;AAYA;;;;AAGAjB,GAAG,CAACQ,GAAJ,CAAQ,UAACM,GAAD,EAAMC,GAAN,EAAWC,IAAX,EAAoB;AACxBD,EAAAA,GAAG,CAACM,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CACI,WADJ;AAGH,CAJD;AAMA;;;;AAGAtB,GAAG,CAACuB,MAAJ,CAAW3B,IAAX,EAAiB;AAAA,SAAMK,QAAQ,iCAA0BL,IAA1B,OAAd;AAAA,CAAjB",
      "sourceRoot": "/Users/aa/rn_applications/nodeTestOcr/src",
      "sourcesContent": [
        "import express from 'express';\nimport bodyParser from 'body-parser';\nimport mongoose from 'mongoose';\n// auth\n// logging\nimport debug from 'debug';\nimport morgan from 'morgan';\nimport cors from 'cors';\n// env\nimport * as dotEnv from 'dotenv';\nimport TesseractRoutes from \"./routes/TesseractRoutes\";\n// models\n\n\ndotEnv.config();\n\nconst {PORT, MONGODB_URI} = process.env;\nconst port = PORT || 5000;\nconst mongodb_uri = MONGODB_URI ;\nconsole.log('mongodb_uri',mongodb_uri);\n//const mongodb_uri =   'mongodb://localhost:27017/ocr';\n\nconst app = express();\nconst debugApp = debug('app');\n// app.options(\"/*\", function (req, res, next) {\n//     res.header('Access-Control-Allow-Origin', '*');\n//     res.header('Access-Control-Allow-Methods', 'GET,PUT,POST,DELETE,OPTIONS');\n//     res.header('Access-Control-Allow-Headers', 'Content-Type, Authorization, Content-Length, X-Requested-With');\n//     res.sendStatus(200);\n// });\n\n/**\n * connecting to mongodb\n * run mongodb (OS X terminal): mongod\n */\nmongoose.connect(\n    mongodb_uri,\n    {\n        useNewUrlParser: true,\n        useCreateIndex: true,\n        useUnifiedTopology: true,\n    }\n)\n    .then(() => debugApp('Connected Successfully to mongodb'))\n    .catch(() => debugApp(\"Can't connect to mongodb\"));\n\n\n/**\n * middlewares\n */\napp.use(morgan('tiny'));\napp.use(cors());\napp.use(bodyParser.json());\napp.use(\n    bodyParser.urlencoded({\n        // extended: true, // false\n        extended: false,\n    })\n);\n\n/**\n * passport middleware\n */\n\n/**\n * routes\n */\napp.use('/api/tessarect', TesseractRoutes());\n\n\n/**\n * Error handling\n */\napp.use((err, req, res, next) => {\n    // treat as 404\n    if (err.message && (~err.message.indexOf('not found') || (~err.message.indexOf('Cast to ObjectId failed')))) {\n        return next();\n    }\n    console.error(err.stack);\n    // error page\n    res.status(500).send(\n        err.message,\n    );\n});\n\n/**\n * assume 404 since no middleware responded\n */\napp.use((req, res, next) => {\n    res.status(404).send(\n        'not found'\n    );\n});\n\n/**\n * Listening to requests\n */\napp.listen(port, () => debugApp(`app listening on port ${port}!`));\n\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1575454427363
  },
  "{\"sourceRoot\":\"/Users/aa/rn_applications/nodeTestOcr/src/routes\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"/Users/aa/rn_applications/nodeTestOcr\",\"filename\":\"/Users/aa/rn_applications/nodeTestOcr/src/routes/TesseractRoutes.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/Users/aa/rn_applications/nodeTestOcr\",\"plugins\":[{\"key\":\"transform-runtime\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"MemberExpression\":{\"enter\":[null],\"exit\":[null]},\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.7.4:development": {
    "metadata": {},
    "options": {
      "sourceRoot": "/Users/aa/rn_applications/nodeTestOcr/src/routes",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "/Users/aa/rn_applications/nodeTestOcr",
      "filename": "/Users/aa/rn_applications/nodeTestOcr/src/routes/TesseractRoutes.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "/Users/aa/rn_applications/nodeTestOcr",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "transform-runtime",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "MemberExpression": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {}
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/Users/aa/rn_applications/nodeTestOcr/src/routes/TesseractRoutes.js",
        "plugins": [
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "/Users/aa/rn_applications/nodeTestOcr/src/routes/TesseractRoutes.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/Users/aa/rn_applications/nodeTestOcr/src/routes",
        "sourceFileName": "TesseractRoutes.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = void 0;\n\nvar _express = require(\"express\");\n\nvar _TesseractController = require(\"../controllers/TesseractController\");\n\nvar _default = function _default() {\n  var Router = (0, _express.Router)();\n  Router.get('/', _TesseractController.getTextFromImage);\n  Router.get('/all', _TesseractController.getAllImages);\n  Router.get('/name', _TesseractController.getTextFromImageWithImageName);\n  Router[\"delete\"]('/:imageName', _TesseractController.deleteImageByName);\n  return Router;\n};\n\nexports[\"default\"] = _default;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIlRlc3NlcmFjdFJvdXRlcy5qcyJdLCJuYW1lcyI6WyJSb3V0ZXIiLCJnZXQiLCJnZXRUZXh0RnJvbUltYWdlIiwiZ2V0QWxsSW1hZ2VzIiwiZ2V0VGV4dEZyb21JbWFnZVdpdGhJbWFnZU5hbWUiLCJkZWxldGVJbWFnZUJ5TmFtZSJdLCJtYXBwaW5ncyI6Ijs7Ozs7OztBQUFBOztBQUNBOztlQVFlLG9CQUFNO0FBQ2pCLE1BQU1BLE1BQU0sR0FBRyxzQkFBZjtBQUNBQSxFQUFBQSxNQUFNLENBQUNDLEdBQVAsQ0FBVyxHQUFYLEVBQ0lDLHFDQURKO0FBSUFGLEVBQUFBLE1BQU0sQ0FBQ0MsR0FBUCxDQUFXLE1BQVgsRUFDSUUsaUNBREo7QUFJQUgsRUFBQUEsTUFBTSxDQUFDQyxHQUFQLENBQVcsT0FBWCxFQUNJRyxrREFESjtBQUdBSixFQUFBQSxNQUFNLFVBQU4sQ0FBYyxhQUFkLEVBQ0lLLHNDQURKO0FBS0EsU0FBT0wsTUFBUDtBQUNILEMiLCJzb3VyY2VSb290IjoiL1VzZXJzL2FhL3JuX2FwcGxpY2F0aW9ucy9ub2RlVGVzdE9jci9zcmMvcm91dGVzIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHtSb3V0ZXIgYXMgRXhwcmVzc1JvdXRlcn0gZnJvbSAnZXhwcmVzcyc7XG5pbXBvcnQge1xuICAgIGdldFRleHRGcm9tSW1hZ2UsXG4gICAgZ2V0VGV4dEZyb21JbWFnZVdpdGhJbWFnZU5hbWUsXG4gICAgZGVsZXRlSW1hZ2VCeU5hbWUsXG4gICAgZ2V0QWxsSW1hZ2VzXG59IGZyb20gJy4uL2NvbnRyb2xsZXJzL1Rlc3NlcmFjdENvbnRyb2xsZXInO1xuXG5cbmV4cG9ydCBkZWZhdWx0ICgpID0+IHtcbiAgICBjb25zdCBSb3V0ZXIgPSBFeHByZXNzUm91dGVyKCk7XG4gICAgUm91dGVyLmdldCgnLycsXG4gICAgICAgIGdldFRleHRGcm9tSW1hZ2VcbiAgICApO1xuXG4gICAgUm91dGVyLmdldCgnL2FsbCcsXG4gICAgICAgIGdldEFsbEltYWdlcyk7XG5cblxuICAgIFJvdXRlci5nZXQoJy9uYW1lJyxcbiAgICAgICAgZ2V0VGV4dEZyb21JbWFnZVdpdGhJbWFnZU5hbWVcbiAgICApO1xuICAgIFJvdXRlci5kZWxldGUoJy86aW1hZ2VOYW1lJyxcbiAgICAgICAgZGVsZXRlSW1hZ2VCeU5hbWVcbiAgICApO1xuXG5cbiAgICByZXR1cm4gUm91dGVyO1xufTtcbiJdfQ==",
    "map": {
      "version": 3,
      "sources": [
        "TesseractRoutes.js"
      ],
      "names": [
        "Router",
        "get",
        "getTextFromImage",
        "getAllImages",
        "getTextFromImageWithImageName",
        "deleteImageByName"
      ],
      "mappings": ";;;;;;;AAAA;;AACA;;eAQe,oBAAM;AACjB,MAAMA,MAAM,GAAG,sBAAf;AACAA,EAAAA,MAAM,CAACC,GAAP,CAAW,GAAX,EACIC,qCADJ;AAIAF,EAAAA,MAAM,CAACC,GAAP,CAAW,MAAX,EACIE,iCADJ;AAIAH,EAAAA,MAAM,CAACC,GAAP,CAAW,OAAX,EACIG,kDADJ;AAGAJ,EAAAA,MAAM,UAAN,CAAc,aAAd,EACIK,sCADJ;AAKA,SAAOL,MAAP;AACH,C",
      "sourceRoot": "/Users/aa/rn_applications/nodeTestOcr/src/routes",
      "sourcesContent": [
        "import {Router as ExpressRouter} from 'express';\nimport {\n    getTextFromImage,\n    getTextFromImageWithImageName,\n    deleteImageByName,\n    getAllImages\n} from '../controllers/TesseractController';\n\n\nexport default () => {\n    const Router = ExpressRouter();\n    Router.get('/',\n        getTextFromImage\n    );\n\n    Router.get('/all',\n        getAllImages);\n\n\n    Router.get('/name',\n        getTextFromImageWithImageName\n    );\n    Router.delete('/:imageName',\n        deleteImageByName\n    );\n\n\n    return Router;\n};\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1575453632709
  },
  "{\"sourceRoot\":\"/Users/aa/rn_applications/nodeTestOcr/src/controllers\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"/Users/aa/rn_applications/nodeTestOcr\",\"filename\":\"/Users/aa/rn_applications/nodeTestOcr/src/controllers/TesseractController.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/Users/aa/rn_applications/nodeTestOcr\",\"plugins\":[{\"key\":\"transform-runtime\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"MemberExpression\":{\"enter\":[null],\"exit\":[null]},\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.7.4:development": {
    "metadata": {},
    "options": {
      "sourceRoot": "/Users/aa/rn_applications/nodeTestOcr/src/controllers",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "/Users/aa/rn_applications/nodeTestOcr",
      "filename": "/Users/aa/rn_applications/nodeTestOcr/src/controllers/TesseractController.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "/Users/aa/rn_applications/nodeTestOcr",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "transform-runtime",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "MemberExpression": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {}
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/Users/aa/rn_applications/nodeTestOcr/src/controllers/TesseractController.js",
        "plugins": [
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "/Users/aa/rn_applications/nodeTestOcr/src/controllers/TesseractController.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/Users/aa/rn_applications/nodeTestOcr/src/controllers",
        "sourceFileName": "TesseractController.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.deleteImageByName = exports.getTextFromImageWithImageName = exports.getAllImages = exports.getTextFromImage = void 0;\n\nvar _TesseractSchema = _interopRequireDefault(require(\"../models/TesseractSchema\"));\n\nvar _nodeTesseractOcr = _interopRequireDefault(require(\"node-tesseract-ocr\"));\n\nvar config = {\n  lang: \"eng\",\n  oem: 1,\n  psm: 3\n}; //Function to get text from Image\n\nvar getTextFromImage = function getTextFromImage(req, res, next) {\n  var imageName = 'image';\n\n  _nodeTesseractOcr[\"default\"].recognize(process.cwd() + '/src/images/' + imageName + '.png', config).then(function (text) {\n    console.log(\"Result:\", text);\n    var newTesseract = new _TesseractSchema[\"default\"]({\n      imageName: imageName,\n      text: text\n    });\n    newTesseract.save().then(function (result) {\n      res.json(result);\n    })[\"catch\"](function (e) {\n      return next(e);\n    });\n  })[\"catch\"](function (e) {\n    next(e);\n  });\n}; //To get all the images\n\n\nexports.getTextFromImage = getTextFromImage;\n\nvar getAllImages = function getAllImages(req, res, next) {\n  _TesseractSchema[\"default\"].find().then(function (images) {\n    res.json(images);\n  })[\"catch\"](function (e) {\n    return next(e);\n  });\n}; //We send in request body the name of the image\n\n\nexports.getAllImages = getAllImages;\n\nvar getTextFromImageWithImageName = function getTextFromImageWithImageName(req, res, next) {\n  var imageName = req.body.imageName;\n\n  if (imageName) {\n    _nodeTesseractOcr[\"default\"].recognize(__dirname + '../images/' + imageName + '.png', config).then(function (text) {\n      console.log(\"Result:\", text);\n      var newTesseract = new _TesseractSchema[\"default\"]({\n        imageName: imageName,\n        text: text\n      });\n      newTesseract.save().then(function (result) {\n        res.json(result);\n      })[\"catch\"](function (e) {\n        return next(e);\n      });\n    })[\"catch\"](function (e) {\n      next(e);\n    });\n  } else {\n    res.status(404).send('no image found');\n  }\n}; //delete an image by name\n\n\nexports.getTextFromImageWithImageName = getTextFromImageWithImageName;\n\nvar deleteImageByName = function deleteImageByName(req, res, next) {\n  var imageName = req.params.imageName;\n\n  if (imageName) {\n    _TesseractSchema[\"default\"].findOneAndDelete({\n      imageName: imageName\n    }).then(function (deletedImage) {\n      res.json(deletedImage);\n    })[\"catch\"](function (e) {\n      return next(e);\n    });\n  } else {\n    res.status(404).send('no image found');\n  }\n};\n\nexports.deleteImageByName = deleteImageByName;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIlRlc3NlcmFjdENvbnRyb2xsZXIuanMiXSwibmFtZXMiOlsiY29uZmlnIiwibGFuZyIsIm9lbSIsInBzbSIsImdldFRleHRGcm9tSW1hZ2UiLCJyZXEiLCJyZXMiLCJuZXh0IiwiaW1hZ2VOYW1lIiwidGVzc2VyYWN0IiwicmVjb2duaXplIiwicHJvY2VzcyIsImN3ZCIsInRoZW4iLCJ0ZXh0IiwiY29uc29sZSIsImxvZyIsIm5ld1Rlc3NlcmFjdCIsIlRlc3NlcmFjdCIsInNhdmUiLCJyZXN1bHQiLCJqc29uIiwiZSIsImdldEFsbEltYWdlcyIsImZpbmQiLCJpbWFnZXMiLCJnZXRUZXh0RnJvbUltYWdlV2l0aEltYWdlTmFtZSIsImJvZHkiLCJfX2Rpcm5hbWUiLCJzdGF0dXMiLCJzZW5kIiwiZGVsZXRlSW1hZ2VCeU5hbWUiLCJwYXJhbXMiLCJmaW5kT25lQW5kRGVsZXRlIiwiZGVsZXRlZEltYWdlIl0sIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7QUFBQTs7QUFDQTs7QUFFQSxJQUFNQSxNQUFNLEdBQUc7QUFDWEMsRUFBQUEsSUFBSSxFQUFFLEtBREs7QUFFWEMsRUFBQUEsR0FBRyxFQUFFLENBRk07QUFHWEMsRUFBQUEsR0FBRyxFQUFFO0FBSE0sQ0FBZixDLENBS0E7O0FBQ08sSUFBTUMsZ0JBQWdCLEdBQUcsU0FBbkJBLGdCQUFtQixDQUFDQyxHQUFELEVBQU1DLEdBQU4sRUFBV0MsSUFBWCxFQUFvQjtBQUVoRCxNQUFJQyxTQUFTLEdBQUcsT0FBaEI7O0FBQ0FDLCtCQUFVQyxTQUFWLENBQW9CQyxPQUFPLENBQUNDLEdBQVIsS0FBZ0IsY0FBaEIsR0FBK0JKLFNBQS9CLEdBQTJDLE1BQS9ELEVBQXVFUixNQUF2RSxFQUNLYSxJQURMLENBQ1UsVUFBQUMsSUFBSSxFQUFJO0FBQ1ZDLElBQUFBLE9BQU8sQ0FBQ0MsR0FBUixDQUFZLFNBQVosRUFBdUJGLElBQXZCO0FBQ0EsUUFBSUcsWUFBWSxHQUFHLElBQUlDLDJCQUFKLENBQWM7QUFDN0JWLE1BQUFBLFNBQVMsRUFBRUEsU0FEa0I7QUFFN0JNLE1BQUFBLElBQUksRUFBRUE7QUFGdUIsS0FBZCxDQUFuQjtBQUlBRyxJQUFBQSxZQUFZLENBQUNFLElBQWIsR0FBb0JOLElBQXBCLENBQXlCLFVBQUFPLE1BQU0sRUFBSTtBQUMvQmQsTUFBQUEsR0FBRyxDQUFDZSxJQUFKLENBQVNELE1BQVQ7QUFDSCxLQUZELFdBRVMsVUFBQUUsQ0FBQztBQUFBLGFBQUlmLElBQUksQ0FBQ2UsQ0FBRCxDQUFSO0FBQUEsS0FGVjtBQUdILEdBVkwsV0FXVyxVQUFBQSxDQUFDLEVBQUk7QUFDUmYsSUFBQUEsSUFBSSxDQUFDZSxDQUFELENBQUo7QUFDSCxHQWJMO0FBY0gsQ0FqQk0sQyxDQWtCUDs7Ozs7QUFDTyxJQUFNQyxZQUFZLEdBQUcsU0FBZkEsWUFBZSxDQUFDbEIsR0FBRCxFQUFNQyxHQUFOLEVBQVdDLElBQVgsRUFBb0I7QUFDNUNXLDhCQUFVTSxJQUFWLEdBQWlCWCxJQUFqQixDQUFzQixVQUFBWSxNQUFNLEVBQUk7QUFDNUJuQixJQUFBQSxHQUFHLENBQUNlLElBQUosQ0FBU0ksTUFBVDtBQUNILEdBRkQsV0FFUyxVQUFBSCxDQUFDO0FBQUEsV0FBSWYsSUFBSSxDQUFDZSxDQUFELENBQVI7QUFBQSxHQUZWO0FBSUgsQ0FMTSxDLENBT1A7Ozs7O0FBQ08sSUFBTUksNkJBQTZCLEdBQUcsU0FBaENBLDZCQUFnQyxDQUFDckIsR0FBRCxFQUFNQyxHQUFOLEVBQVdDLElBQVgsRUFBb0I7QUFBQSxNQUV6REMsU0FGeUQsR0FHekRILEdBQUcsQ0FBQ3NCLElBSHFELENBRXpEbkIsU0FGeUQ7O0FBSTdELE1BQUlBLFNBQUosRUFBZTtBQUNYQyxpQ0FBVUMsU0FBVixDQUFvQmtCLFNBQVMsR0FBRSxZQUFYLEdBQXlCcEIsU0FBekIsR0FBcUMsTUFBekQsRUFBaUVSLE1BQWpFLEVBQ0thLElBREwsQ0FDVSxVQUFBQyxJQUFJLEVBQUk7QUFDVkMsTUFBQUEsT0FBTyxDQUFDQyxHQUFSLENBQVksU0FBWixFQUF1QkYsSUFBdkI7QUFDQSxVQUFJRyxZQUFZLEdBQUcsSUFBSUMsMkJBQUosQ0FBYztBQUM3QlYsUUFBQUEsU0FBUyxFQUFFQSxTQURrQjtBQUU3Qk0sUUFBQUEsSUFBSSxFQUFFQTtBQUZ1QixPQUFkLENBQW5CO0FBSUFHLE1BQUFBLFlBQVksQ0FBQ0UsSUFBYixHQUFvQk4sSUFBcEIsQ0FBeUIsVUFBQU8sTUFBTSxFQUFJO0FBQy9CZCxRQUFBQSxHQUFHLENBQUNlLElBQUosQ0FBU0QsTUFBVDtBQUNILE9BRkQsV0FFUyxVQUFBRSxDQUFDO0FBQUEsZUFBSWYsSUFBSSxDQUFDZSxDQUFELENBQVI7QUFBQSxPQUZWO0FBR0gsS0FWTCxXQVdXLFVBQUFBLENBQUMsRUFBSTtBQUNSZixNQUFBQSxJQUFJLENBQUNlLENBQUQsQ0FBSjtBQUNILEtBYkw7QUFlSCxHQWhCRCxNQWdCTztBQUNIaEIsSUFBQUEsR0FBRyxDQUFDdUIsTUFBSixDQUFXLEdBQVgsRUFBZ0JDLElBQWhCLENBQXFCLGdCQUFyQjtBQUNIO0FBQ0osQ0F2Qk0sQyxDQXlCUDs7Ozs7QUFDTyxJQUFNQyxpQkFBaUIsR0FBRyxTQUFwQkEsaUJBQW9CLENBQUMxQixHQUFELEVBQU1DLEdBQU4sRUFBV0MsSUFBWCxFQUFvQjtBQUFBLE1BRTdDQyxTQUY2QyxHQUc3Q0gsR0FBRyxDQUFDMkIsTUFIeUMsQ0FFN0N4QixTQUY2Qzs7QUFJakQsTUFBSUEsU0FBSixFQUFlO0FBQ1hVLGdDQUFVZSxnQkFBVixDQUEyQjtBQUFDekIsTUFBQUEsU0FBUyxFQUFFQTtBQUFaLEtBQTNCLEVBQW1ESyxJQUFuRCxDQUF3RCxVQUFBcUIsWUFBWSxFQUFJO0FBQ3BFNUIsTUFBQUEsR0FBRyxDQUFDZSxJQUFKLENBQVNhLFlBQVQ7QUFDSCxLQUZELFdBRVMsVUFBQVosQ0FBQztBQUFBLGFBQUlmLElBQUksQ0FBQ2UsQ0FBRCxDQUFSO0FBQUEsS0FGVjtBQUdILEdBSkQsTUFJTztBQUNIaEIsSUFBQUEsR0FBRyxDQUFDdUIsTUFBSixDQUFXLEdBQVgsRUFBZ0JDLElBQWhCLENBQXFCLGdCQUFyQjtBQUNIO0FBQ0osQ0FYTSIsInNvdXJjZVJvb3QiOiIvVXNlcnMvYWEvcm5fYXBwbGljYXRpb25zL25vZGVUZXN0T2NyL3NyYy9jb250cm9sbGVycyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBUZXNzZXJhY3QgZnJvbSAnLi4vbW9kZWxzL1Rlc3NlcmFjdFNjaGVtYSc7XG5pbXBvcnQgdGVzc2VyYWN0IGZyb20gXCJub2RlLXRlc3NlcmFjdC1vY3JcIjtcblxuY29uc3QgY29uZmlnID0ge1xuICAgIGxhbmc6IFwiZW5nXCIsXG4gICAgb2VtOiAxLFxuICAgIHBzbTogMyxcbn07XG4vL0Z1bmN0aW9uIHRvIGdldCB0ZXh0IGZyb20gSW1hZ2VcbmV4cG9ydCBjb25zdCBnZXRUZXh0RnJvbUltYWdlID0gKHJlcSwgcmVzLCBuZXh0KSA9PiB7XG5cbiAgICBsZXQgaW1hZ2VOYW1lID0gJ2ltYWdlJztcbiAgICB0ZXNzZXJhY3QucmVjb2duaXplKHByb2Nlc3MuY3dkKCkgKyAnL3NyYy9pbWFnZXMvJytpbWFnZU5hbWUgKyAnLnBuZycsIGNvbmZpZylcbiAgICAgICAgLnRoZW4odGV4dCA9PiB7XG4gICAgICAgICAgICBjb25zb2xlLmxvZyhcIlJlc3VsdDpcIiwgdGV4dCk7XG4gICAgICAgICAgICBsZXQgbmV3VGVzc2VyYWN0ID0gbmV3IFRlc3NlcmFjdCh7XG4gICAgICAgICAgICAgICAgaW1hZ2VOYW1lOiBpbWFnZU5hbWUsXG4gICAgICAgICAgICAgICAgdGV4dDogdGV4dCxcbiAgICAgICAgICAgIH0pO1xuICAgICAgICAgICAgbmV3VGVzc2VyYWN0LnNhdmUoKS50aGVuKHJlc3VsdCA9PiB7XG4gICAgICAgICAgICAgICAgcmVzLmpzb24ocmVzdWx0KTtcbiAgICAgICAgICAgIH0pLmNhdGNoKGUgPT4gbmV4dChlKSk7XG4gICAgICAgIH0pXG4gICAgICAgIC5jYXRjaChlID0+IHtcbiAgICAgICAgICAgIG5leHQoZSlcbiAgICAgICAgfSk7XG59O1xuLy9UbyBnZXQgYWxsIHRoZSBpbWFnZXNcbmV4cG9ydCBjb25zdCBnZXRBbGxJbWFnZXMgPSAocmVxLCByZXMsIG5leHQpID0+IHtcbiAgICBUZXNzZXJhY3QuZmluZCgpLnRoZW4oaW1hZ2VzID0+IHtcbiAgICAgICAgcmVzLmpzb24oaW1hZ2VzKTtcbiAgICB9KS5jYXRjaChlID0+IG5leHQoZSkpO1xuXG59O1xuXG4vL1dlIHNlbmQgaW4gcmVxdWVzdCBib2R5IHRoZSBuYW1lIG9mIHRoZSBpbWFnZVxuZXhwb3J0IGNvbnN0IGdldFRleHRGcm9tSW1hZ2VXaXRoSW1hZ2VOYW1lID0gKHJlcSwgcmVzLCBuZXh0KSA9PiB7XG4gICAgbGV0IHtcbiAgICAgICAgaW1hZ2VOYW1lXG4gICAgfSA9IHJlcS5ib2R5O1xuICAgIGlmIChpbWFnZU5hbWUpIHtcbiAgICAgICAgdGVzc2VyYWN0LnJlY29nbml6ZShfX2Rpcm5hbWUgKycuLi9pbWFnZXMvJysgaW1hZ2VOYW1lICsgJy5wbmcnLCBjb25maWcpXG4gICAgICAgICAgICAudGhlbih0ZXh0ID0+IHtcbiAgICAgICAgICAgICAgICBjb25zb2xlLmxvZyhcIlJlc3VsdDpcIiwgdGV4dCk7XG4gICAgICAgICAgICAgICAgbGV0IG5ld1Rlc3NlcmFjdCA9IG5ldyBUZXNzZXJhY3Qoe1xuICAgICAgICAgICAgICAgICAgICBpbWFnZU5hbWU6IGltYWdlTmFtZSxcbiAgICAgICAgICAgICAgICAgICAgdGV4dDogdGV4dCxcbiAgICAgICAgICAgICAgICB9KTtcbiAgICAgICAgICAgICAgICBuZXdUZXNzZXJhY3Quc2F2ZSgpLnRoZW4ocmVzdWx0ID0+IHtcbiAgICAgICAgICAgICAgICAgICAgcmVzLmpzb24ocmVzdWx0KTtcbiAgICAgICAgICAgICAgICB9KS5jYXRjaChlID0+IG5leHQoZSkpO1xuICAgICAgICAgICAgfSlcbiAgICAgICAgICAgIC5jYXRjaChlID0+IHtcbiAgICAgICAgICAgICAgICBuZXh0KGUpXG4gICAgICAgICAgICB9KTtcblxuICAgIH0gZWxzZSB7XG4gICAgICAgIHJlcy5zdGF0dXMoNDA0KS5zZW5kKCdubyBpbWFnZSBmb3VuZCcpO1xuICAgIH1cbn07XG5cbi8vZGVsZXRlIGFuIGltYWdlIGJ5IG5hbWVcbmV4cG9ydCBjb25zdCBkZWxldGVJbWFnZUJ5TmFtZSA9IChyZXEsIHJlcywgbmV4dCkgPT4ge1xuICAgIGxldCB7XG4gICAgICAgIGltYWdlTmFtZVxuICAgIH0gPSByZXEucGFyYW1zO1xuICAgIGlmIChpbWFnZU5hbWUpIHtcbiAgICAgICAgVGVzc2VyYWN0LmZpbmRPbmVBbmREZWxldGUoe2ltYWdlTmFtZTogaW1hZ2VOYW1lfSkudGhlbihkZWxldGVkSW1hZ2UgPT4ge1xuICAgICAgICAgICAgcmVzLmpzb24oZGVsZXRlZEltYWdlKTtcbiAgICAgICAgfSkuY2F0Y2goZSA9PiBuZXh0KGUpKTtcbiAgICB9IGVsc2Uge1xuICAgICAgICByZXMuc3RhdHVzKDQwNCkuc2VuZCgnbm8gaW1hZ2UgZm91bmQnKTtcbiAgICB9XG59O1xuXG4iXX0=",
    "map": {
      "version": 3,
      "sources": [
        "TesseractController.js"
      ],
      "names": [
        "config",
        "lang",
        "oem",
        "psm",
        "getTextFromImage",
        "req",
        "res",
        "next",
        "imageName",
        "tesseract",
        "recognize",
        "process",
        "cwd",
        "then",
        "text",
        "console",
        "log",
        "newTesseract",
        "Tesseract",
        "save",
        "result",
        "json",
        "e",
        "getAllImages",
        "find",
        "images",
        "getTextFromImageWithImageName",
        "body",
        "__dirname",
        "status",
        "send",
        "deleteImageByName",
        "params",
        "findOneAndDelete",
        "deletedImage"
      ],
      "mappings": ";;;;;;;;;AAAA;;AACA;;AAEA,IAAMA,MAAM,GAAG;AACXC,EAAAA,IAAI,EAAE,KADK;AAEXC,EAAAA,GAAG,EAAE,CAFM;AAGXC,EAAAA,GAAG,EAAE;AAHM,CAAf,C,CAKA;;AACO,IAAMC,gBAAgB,GAAG,SAAnBA,gBAAmB,CAACC,GAAD,EAAMC,GAAN,EAAWC,IAAX,EAAoB;AAEhD,MAAIC,SAAS,GAAG,OAAhB;;AACAC,+BAAUC,SAAV,CAAoBC,OAAO,CAACC,GAAR,KAAgB,cAAhB,GAA+BJ,SAA/B,GAA2C,MAA/D,EAAuER,MAAvE,EACKa,IADL,CACU,UAAAC,IAAI,EAAI;AACVC,IAAAA,OAAO,CAACC,GAAR,CAAY,SAAZ,EAAuBF,IAAvB;AACA,QAAIG,YAAY,GAAG,IAAIC,2BAAJ,CAAc;AAC7BV,MAAAA,SAAS,EAAEA,SADkB;AAE7BM,MAAAA,IAAI,EAAEA;AAFuB,KAAd,CAAnB;AAIAG,IAAAA,YAAY,CAACE,IAAb,GAAoBN,IAApB,CAAyB,UAAAO,MAAM,EAAI;AAC/Bd,MAAAA,GAAG,CAACe,IAAJ,CAASD,MAAT;AACH,KAFD,WAES,UAAAE,CAAC;AAAA,aAAIf,IAAI,CAACe,CAAD,CAAR;AAAA,KAFV;AAGH,GAVL,WAWW,UAAAA,CAAC,EAAI;AACRf,IAAAA,IAAI,CAACe,CAAD,CAAJ;AACH,GAbL;AAcH,CAjBM,C,CAkBP;;;;;AACO,IAAMC,YAAY,GAAG,SAAfA,YAAe,CAAClB,GAAD,EAAMC,GAAN,EAAWC,IAAX,EAAoB;AAC5CW,8BAAUM,IAAV,GAAiBX,IAAjB,CAAsB,UAAAY,MAAM,EAAI;AAC5BnB,IAAAA,GAAG,CAACe,IAAJ,CAASI,MAAT;AACH,GAFD,WAES,UAAAH,CAAC;AAAA,WAAIf,IAAI,CAACe,CAAD,CAAR;AAAA,GAFV;AAIH,CALM,C,CAOP;;;;;AACO,IAAMI,6BAA6B,GAAG,SAAhCA,6BAAgC,CAACrB,GAAD,EAAMC,GAAN,EAAWC,IAAX,EAAoB;AAAA,MAEzDC,SAFyD,GAGzDH,GAAG,CAACsB,IAHqD,CAEzDnB,SAFyD;;AAI7D,MAAIA,SAAJ,EAAe;AACXC,iCAAUC,SAAV,CAAoBkB,SAAS,GAAE,YAAX,GAAyBpB,SAAzB,GAAqC,MAAzD,EAAiER,MAAjE,EACKa,IADL,CACU,UAAAC,IAAI,EAAI;AACVC,MAAAA,OAAO,CAACC,GAAR,CAAY,SAAZ,EAAuBF,IAAvB;AACA,UAAIG,YAAY,GAAG,IAAIC,2BAAJ,CAAc;AAC7BV,QAAAA,SAAS,EAAEA,SADkB;AAE7BM,QAAAA,IAAI,EAAEA;AAFuB,OAAd,CAAnB;AAIAG,MAAAA,YAAY,CAACE,IAAb,GAAoBN,IAApB,CAAyB,UAAAO,MAAM,EAAI;AAC/Bd,QAAAA,GAAG,CAACe,IAAJ,CAASD,MAAT;AACH,OAFD,WAES,UAAAE,CAAC;AAAA,eAAIf,IAAI,CAACe,CAAD,CAAR;AAAA,OAFV;AAGH,KAVL,WAWW,UAAAA,CAAC,EAAI;AACRf,MAAAA,IAAI,CAACe,CAAD,CAAJ;AACH,KAbL;AAeH,GAhBD,MAgBO;AACHhB,IAAAA,GAAG,CAACuB,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB,gBAArB;AACH;AACJ,CAvBM,C,CAyBP;;;;;AACO,IAAMC,iBAAiB,GAAG,SAApBA,iBAAoB,CAAC1B,GAAD,EAAMC,GAAN,EAAWC,IAAX,EAAoB;AAAA,MAE7CC,SAF6C,GAG7CH,GAAG,CAAC2B,MAHyC,CAE7CxB,SAF6C;;AAIjD,MAAIA,SAAJ,EAAe;AACXU,gCAAUe,gBAAV,CAA2B;AAACzB,MAAAA,SAAS,EAAEA;AAAZ,KAA3B,EAAmDK,IAAnD,CAAwD,UAAAqB,YAAY,EAAI;AACpE5B,MAAAA,GAAG,CAACe,IAAJ,CAASa,YAAT;AACH,KAFD,WAES,UAAAZ,CAAC;AAAA,aAAIf,IAAI,CAACe,CAAD,CAAR;AAAA,KAFV;AAGH,GAJD,MAIO;AACHhB,IAAAA,GAAG,CAACuB,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB,gBAArB;AACH;AACJ,CAXM",
      "sourceRoot": "/Users/aa/rn_applications/nodeTestOcr/src/controllers",
      "sourcesContent": [
        "import Tesseract from '../models/TesseractSchema';\nimport tesseract from \"node-tesseract-ocr\";\n\nconst config = {\n    lang: \"eng\",\n    oem: 1,\n    psm: 3,\n};\n//Function to get text from Image\nexport const getTextFromImage = (req, res, next) => {\n\n    let imageName = 'image';\n    tesseract.recognize(process.cwd() + '/src/images/'+imageName + '.png', config)\n        .then(text => {\n            console.log(\"Result:\", text);\n            let newTesseract = new Tesseract({\n                imageName: imageName,\n                text: text,\n            });\n            newTesseract.save().then(result => {\n                res.json(result);\n            }).catch(e => next(e));\n        })\n        .catch(e => {\n            next(e)\n        });\n};\n//To get all the images\nexport const getAllImages = (req, res, next) => {\n    Tesseract.find().then(images => {\n        res.json(images);\n    }).catch(e => next(e));\n\n};\n\n//We send in request body the name of the image\nexport const getTextFromImageWithImageName = (req, res, next) => {\n    let {\n        imageName\n    } = req.body;\n    if (imageName) {\n        tesseract.recognize(__dirname +'../images/'+ imageName + '.png', config)\n            .then(text => {\n                console.log(\"Result:\", text);\n                let newTesseract = new Tesseract({\n                    imageName: imageName,\n                    text: text,\n                });\n                newTesseract.save().then(result => {\n                    res.json(result);\n                }).catch(e => next(e));\n            })\n            .catch(e => {\n                next(e)\n            });\n\n    } else {\n        res.status(404).send('no image found');\n    }\n};\n\n//delete an image by name\nexport const deleteImageByName = (req, res, next) => {\n    let {\n        imageName\n    } = req.params;\n    if (imageName) {\n        Tesseract.findOneAndDelete({imageName: imageName}).then(deletedImage => {\n            res.json(deletedImage);\n        }).catch(e => next(e));\n    } else {\n        res.status(404).send('no image found');\n    }\n};\n\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1575454223200
  },
  "{\"sourceRoot\":\"/Users/aa/rn_applications/nodeTestOcr/src/models\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"/Users/aa/rn_applications/nodeTestOcr\",\"filename\":\"/Users/aa/rn_applications/nodeTestOcr/src/models/TesseractSchema.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/Users/aa/rn_applications/nodeTestOcr\",\"plugins\":[{\"key\":\"transform-runtime\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"MemberExpression\":{\"enter\":[null],\"exit\":[null]},\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.7.4:development": {
    "metadata": {},
    "options": {
      "sourceRoot": "/Users/aa/rn_applications/nodeTestOcr/src/models",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "/Users/aa/rn_applications/nodeTestOcr",
      "filename": "/Users/aa/rn_applications/nodeTestOcr/src/models/TesseractSchema.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "/Users/aa/rn_applications/nodeTestOcr",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "transform-runtime",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "MemberExpression": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {}
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/Users/aa/rn_applications/nodeTestOcr/src/models/TesseractSchema.js",
        "plugins": [
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "/Users/aa/rn_applications/nodeTestOcr/src/models/TesseractSchema.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/Users/aa/rn_applications/nodeTestOcr/src/models",
        "sourceFileName": "TesseractSchema.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nvar _interopRequireWildcard = require(\"@babel/runtime/helpers/interopRequireWildcard\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = void 0;\n\nvar _mongoose = _interopRequireWildcard(require(\"mongoose\"));\n\n// import validator from 'validator';\nvar TesseractSchema = new _mongoose.Schema({\n  imageName: {\n    type: String,\n    required: true,\n    unique: true\n  },\n  text: {\n    type: String\n  }\n});\n\nvar _default = _mongoose[\"default\"].model('Tesseract', TesseractSchema);\n\nexports[\"default\"] = _default;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIlRlc3NlcmFjdFNjaGVtYS5qcyJdLCJuYW1lcyI6WyJUZXNzZXJhY3RTY2hlbWEiLCJTY2hlbWEiLCJpbWFnZU5hbWUiLCJ0eXBlIiwiU3RyaW5nIiwicmVxdWlyZWQiLCJ1bmlxdWUiLCJ0ZXh0IiwibW9uZ29vc2UiLCJtb2RlbCJdLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7O0FBQUE7O0FBQ0E7QUFHQSxJQUFNQSxlQUFlLEdBQUcsSUFBSUMsZ0JBQUosQ0FBVztBQUUvQkMsRUFBQUEsU0FBUyxFQUFFO0FBQ1BDLElBQUFBLElBQUksRUFBRUMsTUFEQztBQUVQQyxJQUFBQSxRQUFRLEVBQUUsSUFGSDtBQUdQQyxJQUFBQSxNQUFNLEVBQUU7QUFIRCxHQUZvQjtBQU8vQkMsRUFBQUEsSUFBSSxFQUFFO0FBQ0ZKLElBQUFBLElBQUksRUFBRUM7QUFESjtBQVB5QixDQUFYLENBQXhCOztlQWFlSSxxQkFBU0MsS0FBVCxDQUFlLFdBQWYsRUFBNEJULGVBQTVCLEMiLCJzb3VyY2VSb290IjoiL1VzZXJzL2FhL3JuX2FwcGxpY2F0aW9ucy9ub2RlVGVzdE9jci9zcmMvbW9kZWxzIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IG1vbmdvb3NlLCB7U2NoZW1hfSBmcm9tICdtb25nb29zZSc7XG4vLyBpbXBvcnQgdmFsaWRhdG9yIGZyb20gJ3ZhbGlkYXRvcic7XG5cblxuY29uc3QgVGVzc2VyYWN0U2NoZW1hID0gbmV3IFNjaGVtYSh7XG5cbiAgICBpbWFnZU5hbWU6IHtcbiAgICAgICAgdHlwZTogU3RyaW5nLFxuICAgICAgICByZXF1aXJlZDogdHJ1ZSxcbiAgICAgICAgdW5pcXVlOiB0cnVlLFxuICAgIH0sXG4gICAgdGV4dDoge1xuICAgICAgICB0eXBlOiBTdHJpbmcsXG4gICAgfSxcblxufSk7XG5cbmV4cG9ydCBkZWZhdWx0IG1vbmdvb3NlLm1vZGVsKCdUZXNzZXJhY3QnLCBUZXNzZXJhY3RTY2hlbWEpO1xuIl19",
    "map": {
      "version": 3,
      "sources": [
        "TesseractSchema.js"
      ],
      "names": [
        "TesseractSchema",
        "Schema",
        "imageName",
        "type",
        "String",
        "required",
        "unique",
        "text",
        "mongoose",
        "model"
      ],
      "mappings": ";;;;;;;;;AAAA;;AACA;AAGA,IAAMA,eAAe,GAAG,IAAIC,gBAAJ,CAAW;AAE/BC,EAAAA,SAAS,EAAE;AACPC,IAAAA,IAAI,EAAEC,MADC;AAEPC,IAAAA,QAAQ,EAAE,IAFH;AAGPC,IAAAA,MAAM,EAAE;AAHD,GAFoB;AAO/BC,EAAAA,IAAI,EAAE;AACFJ,IAAAA,IAAI,EAAEC;AADJ;AAPyB,CAAX,CAAxB;;eAaeI,qBAASC,KAAT,CAAe,WAAf,EAA4BT,eAA5B,C",
      "sourceRoot": "/Users/aa/rn_applications/nodeTestOcr/src/models",
      "sourcesContent": [
        "import mongoose, {Schema} from 'mongoose';\n// import validator from 'validator';\n\n\nconst TesseractSchema = new Schema({\n\n    imageName: {\n        type: String,\n        required: true,\n        unique: true,\n    },\n    text: {\n        type: String,\n    },\n\n});\n\nexport default mongoose.model('Tesseract', TesseractSchema);\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1575453701764
  },
  "{\"sourceRoot\":\"/Users/aa/rn_applications/ocr-nodejs/src\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"/Users/aa/rn_applications/ocr-nodejs\",\"filename\":\"/Users/aa/rn_applications/ocr-nodejs/src/index.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/Users/aa/rn_applications/ocr-nodejs\",\"plugins\":[{\"key\":\"transform-runtime\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"MemberExpression\":{\"enter\":[null],\"exit\":[null]},\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.7.4:development": {
    "metadata": {},
    "options": {
      "sourceRoot": "/Users/aa/rn_applications/ocr-nodejs/src",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "/Users/aa/rn_applications/ocr-nodejs",
      "filename": "/Users/aa/rn_applications/ocr-nodejs/src/index.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "/Users/aa/rn_applications/ocr-nodejs",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "transform-runtime",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "MemberExpression": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {}
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/Users/aa/rn_applications/ocr-nodejs/src/index.js",
        "plugins": [
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "/Users/aa/rn_applications/ocr-nodejs/src/index.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/Users/aa/rn_applications/ocr-nodejs/src",
        "sourceFileName": "index.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nvar _interopRequireWildcard = require(\"@babel/runtime/helpers/interopRequireWildcard\");\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nvar _express = _interopRequireDefault(require(\"express\"));\n\nvar _bodyParser = _interopRequireDefault(require(\"body-parser\"));\n\nvar _mongoose = _interopRequireDefault(require(\"mongoose\"));\n\nvar _debug = _interopRequireDefault(require(\"debug\"));\n\nvar _morgan = _interopRequireDefault(require(\"morgan\"));\n\nvar _cors = _interopRequireDefault(require(\"cors\"));\n\nvar dotEnv = _interopRequireWildcard(require(\"dotenv\"));\n\nvar _TesseractRoutes = _interopRequireDefault(require(\"./routes/TesseractRoutes\"));\n\n// auth\n// logging\n// env\n// models\ndotEnv.config();\nvar PORT = process.env.PORT;\nvar port = PORT || 5000;\nvar mongodb_uri = 'mongodb://localhost:27017/ocr';\nvar app = (0, _express[\"default\"])();\nvar debugApp = (0, _debug[\"default\"])('app');\n/**\n * connecting to mongodb\n */\n\n_mongoose[\"default\"].connect(mongodb_uri, {\n  useNewUrlParser: true,\n  useCreateIndex: true,\n  useUnifiedTopology: true\n}).then(function () {\n  return debugApp('Connected Successfully to mongodb');\n})[\"catch\"](function () {\n  return debugApp(\"Can't connect to mongodb\");\n});\n/**\n * middlewares\n */\n\n\napp.use((0, _morgan[\"default\"])('tiny'));\napp.use((0, _cors[\"default\"])());\napp.use(_bodyParser[\"default\"].json());\napp.use(_bodyParser[\"default\"].urlencoded({\n  // extended: true, // false\n  extended: false\n}));\n/**\n * passport middleware\n */\n\n/**\n * routes\n */\n\napp.use('/api/tessarect', (0, _TesseractRoutes[\"default\"])());\n/**\n * Error handling\n */\n\napp.use(function (err, req, res, next) {\n  // treat as 404\n  if (err.message && (~err.message.indexOf('not found') || ~err.message.indexOf('Cast to ObjectId failed'))) {\n    return next();\n  }\n\n  console.error(err.stack); // error page\n\n  res.status(500).send(err.message);\n});\n/**\n * assume 404 since no middleware responded\n */\n\napp.use(function (req, res, next) {\n  res.status(404).send('not found');\n});\n/**\n * Listening to requests\n */\n\napp.listen(port, function () {\n  return debugApp(\"app listening on port \".concat(port, \"!\"));\n});\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImluZGV4LmpzIl0sIm5hbWVzIjpbImRvdEVudiIsImNvbmZpZyIsIlBPUlQiLCJwcm9jZXNzIiwiZW52IiwicG9ydCIsIm1vbmdvZGJfdXJpIiwiYXBwIiwiZGVidWdBcHAiLCJtb25nb29zZSIsImNvbm5lY3QiLCJ1c2VOZXdVcmxQYXJzZXIiLCJ1c2VDcmVhdGVJbmRleCIsInVzZVVuaWZpZWRUb3BvbG9neSIsInRoZW4iLCJ1c2UiLCJib2R5UGFyc2VyIiwianNvbiIsInVybGVuY29kZWQiLCJleHRlbmRlZCIsImVyciIsInJlcSIsInJlcyIsIm5leHQiLCJtZXNzYWdlIiwiaW5kZXhPZiIsImNvbnNvbGUiLCJlcnJvciIsInN0YWNrIiwic3RhdHVzIiwic2VuZCIsImxpc3RlbiJdLCJtYXBwaW5ncyI6Ijs7Ozs7O0FBQUE7O0FBQ0E7O0FBQ0E7O0FBR0E7O0FBQ0E7O0FBQ0E7O0FBRUE7O0FBQ0E7O0FBUEE7QUFDQTtBQUlBO0FBR0E7QUFHQUEsTUFBTSxDQUFDQyxNQUFQO0lBRU9DLEksR0FBUUMsT0FBTyxDQUFDQyxHLENBQWhCRixJO0FBQ1AsSUFBTUcsSUFBSSxHQUFHSCxJQUFJLElBQUksSUFBckI7QUFDQSxJQUFNSSxXQUFXLEdBQUksK0JBQXJCO0FBRUEsSUFBTUMsR0FBRyxHQUFHLDBCQUFaO0FBQ0EsSUFBTUMsUUFBUSxHQUFHLHVCQUFNLEtBQU4sQ0FBakI7QUFFQTs7OztBQUdBQyxxQkFBU0MsT0FBVCxDQUNJSixXQURKLEVBRUk7QUFDSUssRUFBQUEsZUFBZSxFQUFFLElBRHJCO0FBRUlDLEVBQUFBLGNBQWMsRUFBRSxJQUZwQjtBQUdJQyxFQUFBQSxrQkFBa0IsRUFBRTtBQUh4QixDQUZKLEVBUUtDLElBUkwsQ0FRVTtBQUFBLFNBQU1OLFFBQVEsQ0FBQyxtQ0FBRCxDQUFkO0FBQUEsQ0FSVixXQVNXO0FBQUEsU0FBTUEsUUFBUSxDQUFDLDBCQUFELENBQWQ7QUFBQSxDQVRYO0FBWUE7Ozs7O0FBR0FELEdBQUcsQ0FBQ1EsR0FBSixDQUFRLHdCQUFPLE1BQVAsQ0FBUjtBQUNBUixHQUFHLENBQUNRLEdBQUosQ0FBUSx1QkFBUjtBQUNBUixHQUFHLENBQUNRLEdBQUosQ0FBUUMsdUJBQVdDLElBQVgsRUFBUjtBQUNBVixHQUFHLENBQUNRLEdBQUosQ0FDSUMsdUJBQVdFLFVBQVgsQ0FBc0I7QUFDbEI7QUFDQUMsRUFBQUEsUUFBUSxFQUFFO0FBRlEsQ0FBdEIsQ0FESjtBQU9BOzs7O0FBSUE7Ozs7QUFHQVosR0FBRyxDQUFDUSxHQUFKLENBQVEsZ0JBQVIsRUFBMEIsa0NBQTFCO0FBR0E7Ozs7QUFHQVIsR0FBRyxDQUFDUSxHQUFKLENBQVEsVUFBQ0ssR0FBRCxFQUFNQyxHQUFOLEVBQVdDLEdBQVgsRUFBZ0JDLElBQWhCLEVBQXlCO0FBQzdCO0FBQ0EsTUFBSUgsR0FBRyxDQUFDSSxPQUFKLEtBQWdCLENBQUNKLEdBQUcsQ0FBQ0ksT0FBSixDQUFZQyxPQUFaLENBQW9CLFdBQXBCLENBQUQsSUFBc0MsQ0FBQ0wsR0FBRyxDQUFDSSxPQUFKLENBQVlDLE9BQVosQ0FBb0IseUJBQXBCLENBQXZELENBQUosRUFBNkc7QUFDekcsV0FBT0YsSUFBSSxFQUFYO0FBQ0g7O0FBQ0RHLEVBQUFBLE9BQU8sQ0FBQ0MsS0FBUixDQUFjUCxHQUFHLENBQUNRLEtBQWxCLEVBTDZCLENBTTdCOztBQUNBTixFQUFBQSxHQUFHLENBQUNPLE1BQUosQ0FBVyxHQUFYLEVBQWdCQyxJQUFoQixDQUNJVixHQUFHLENBQUNJLE9BRFI7QUFHSCxDQVZEO0FBWUE7Ozs7QUFHQWpCLEdBQUcsQ0FBQ1EsR0FBSixDQUFRLFVBQUNNLEdBQUQsRUFBTUMsR0FBTixFQUFXQyxJQUFYLEVBQW9CO0FBQ3hCRCxFQUFBQSxHQUFHLENBQUNPLE1BQUosQ0FBVyxHQUFYLEVBQWdCQyxJQUFoQixDQUNJLFdBREo7QUFHSCxDQUpEO0FBTUE7Ozs7QUFHQXZCLEdBQUcsQ0FBQ3dCLE1BQUosQ0FBVzFCLElBQVgsRUFBaUI7QUFBQSxTQUFNRyxRQUFRLGlDQUEwQkgsSUFBMUIsT0FBZDtBQUFBLENBQWpCIiwic291cmNlUm9vdCI6Ii9Vc2Vycy9hYS9ybl9hcHBsaWNhdGlvbnMvb2NyLW5vZGVqcy9zcmMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgZXhwcmVzcyBmcm9tICdleHByZXNzJztcbmltcG9ydCBib2R5UGFyc2VyIGZyb20gJ2JvZHktcGFyc2VyJztcbmltcG9ydCBtb25nb29zZSBmcm9tICdtb25nb29zZSc7XG4vLyBhdXRoXG4vLyBsb2dnaW5nXG5pbXBvcnQgZGVidWcgZnJvbSAnZGVidWcnO1xuaW1wb3J0IG1vcmdhbiBmcm9tICdtb3JnYW4nO1xuaW1wb3J0IGNvcnMgZnJvbSAnY29ycyc7XG4vLyBlbnZcbmltcG9ydCAqIGFzIGRvdEVudiBmcm9tICdkb3RlbnYnO1xuaW1wb3J0IFRlc3NlcmFjdFJvdXRlcyBmcm9tIFwiLi9yb3V0ZXMvVGVzc2VyYWN0Um91dGVzXCI7XG4vLyBtb2RlbHNcblxuXG5kb3RFbnYuY29uZmlnKCk7XG5cbmNvbnN0IHtQT1JUfSA9IHByb2Nlc3MuZW52O1xuY29uc3QgcG9ydCA9IFBPUlQgfHwgNTAwMDtcbmNvbnN0IG1vbmdvZGJfdXJpID0gICdtb25nb2RiOi8vbG9jYWxob3N0OjI3MDE3L29jcicgO1xuXG5jb25zdCBhcHAgPSBleHByZXNzKCk7XG5jb25zdCBkZWJ1Z0FwcCA9IGRlYnVnKCdhcHAnKTtcblxuLyoqXG4gKiBjb25uZWN0aW5nIHRvIG1vbmdvZGJcbiAqL1xubW9uZ29vc2UuY29ubmVjdChcbiAgICBtb25nb2RiX3VyaSxcbiAgICB7XG4gICAgICAgIHVzZU5ld1VybFBhcnNlcjogdHJ1ZSxcbiAgICAgICAgdXNlQ3JlYXRlSW5kZXg6IHRydWUsXG4gICAgICAgIHVzZVVuaWZpZWRUb3BvbG9neTogdHJ1ZSxcbiAgICB9XG4pXG4gICAgLnRoZW4oKCkgPT4gZGVidWdBcHAoJ0Nvbm5lY3RlZCBTdWNjZXNzZnVsbHkgdG8gbW9uZ29kYicpKVxuICAgIC5jYXRjaCgoKSA9PiBkZWJ1Z0FwcChcIkNhbid0IGNvbm5lY3QgdG8gbW9uZ29kYlwiKSk7XG5cblxuLyoqXG4gKiBtaWRkbGV3YXJlc1xuICovXG5hcHAudXNlKG1vcmdhbigndGlueScpKTtcbmFwcC51c2UoY29ycygpKTtcbmFwcC51c2UoYm9keVBhcnNlci5qc29uKCkpO1xuYXBwLnVzZShcbiAgICBib2R5UGFyc2VyLnVybGVuY29kZWQoe1xuICAgICAgICAvLyBleHRlbmRlZDogdHJ1ZSwgLy8gZmFsc2VcbiAgICAgICAgZXh0ZW5kZWQ6IGZhbHNlLFxuICAgIH0pXG4pO1xuXG4vKipcbiAqIHBhc3Nwb3J0IG1pZGRsZXdhcmVcbiAqL1xuXG4vKipcbiAqIHJvdXRlc1xuICovXG5hcHAudXNlKCcvYXBpL3Rlc3NhcmVjdCcsIFRlc3NlcmFjdFJvdXRlcygpKTtcblxuXG4vKipcbiAqIEVycm9yIGhhbmRsaW5nXG4gKi9cbmFwcC51c2UoKGVyciwgcmVxLCByZXMsIG5leHQpID0+IHtcbiAgICAvLyB0cmVhdCBhcyA0MDRcbiAgICBpZiAoZXJyLm1lc3NhZ2UgJiYgKH5lcnIubWVzc2FnZS5pbmRleE9mKCdub3QgZm91bmQnKSB8fCAofmVyci5tZXNzYWdlLmluZGV4T2YoJ0Nhc3QgdG8gT2JqZWN0SWQgZmFpbGVkJykpKSkge1xuICAgICAgICByZXR1cm4gbmV4dCgpO1xuICAgIH1cbiAgICBjb25zb2xlLmVycm9yKGVyci5zdGFjayk7XG4gICAgLy8gZXJyb3IgcGFnZVxuICAgIHJlcy5zdGF0dXMoNTAwKS5zZW5kKFxuICAgICAgICBlcnIubWVzc2FnZSxcbiAgICApO1xufSk7XG5cbi8qKlxuICogYXNzdW1lIDQwNCBzaW5jZSBubyBtaWRkbGV3YXJlIHJlc3BvbmRlZFxuICovXG5hcHAudXNlKChyZXEsIHJlcywgbmV4dCkgPT4ge1xuICAgIHJlcy5zdGF0dXMoNDA0KS5zZW5kKFxuICAgICAgICAnbm90IGZvdW5kJ1xuICAgICk7XG59KTtcblxuLyoqXG4gKiBMaXN0ZW5pbmcgdG8gcmVxdWVzdHNcbiAqL1xuYXBwLmxpc3Rlbihwb3J0LCAoKSA9PiBkZWJ1Z0FwcChgYXBwIGxpc3RlbmluZyBvbiBwb3J0ICR7cG9ydH0hYCkpO1xuXG4iXX0=",
    "map": {
      "version": 3,
      "sources": [
        "index.js"
      ],
      "names": [
        "dotEnv",
        "config",
        "PORT",
        "process",
        "env",
        "port",
        "mongodb_uri",
        "app",
        "debugApp",
        "mongoose",
        "connect",
        "useNewUrlParser",
        "useCreateIndex",
        "useUnifiedTopology",
        "then",
        "use",
        "bodyParser",
        "json",
        "urlencoded",
        "extended",
        "err",
        "req",
        "res",
        "next",
        "message",
        "indexOf",
        "console",
        "error",
        "stack",
        "status",
        "send",
        "listen"
      ],
      "mappings": ";;;;;;AAAA;;AACA;;AACA;;AAGA;;AACA;;AACA;;AAEA;;AACA;;AAPA;AACA;AAIA;AAGA;AAGAA,MAAM,CAACC,MAAP;IAEOC,I,GAAQC,OAAO,CAACC,G,CAAhBF,I;AACP,IAAMG,IAAI,GAAGH,IAAI,IAAI,IAArB;AACA,IAAMI,WAAW,GAAI,+BAArB;AAEA,IAAMC,GAAG,GAAG,0BAAZ;AACA,IAAMC,QAAQ,GAAG,uBAAM,KAAN,CAAjB;AAEA;;;;AAGAC,qBAASC,OAAT,CACIJ,WADJ,EAEI;AACIK,EAAAA,eAAe,EAAE,IADrB;AAEIC,EAAAA,cAAc,EAAE,IAFpB;AAGIC,EAAAA,kBAAkB,EAAE;AAHxB,CAFJ,EAQKC,IARL,CAQU;AAAA,SAAMN,QAAQ,CAAC,mCAAD,CAAd;AAAA,CARV,WASW;AAAA,SAAMA,QAAQ,CAAC,0BAAD,CAAd;AAAA,CATX;AAYA;;;;;AAGAD,GAAG,CAACQ,GAAJ,CAAQ,wBAAO,MAAP,CAAR;AACAR,GAAG,CAACQ,GAAJ,CAAQ,uBAAR;AACAR,GAAG,CAACQ,GAAJ,CAAQC,uBAAWC,IAAX,EAAR;AACAV,GAAG,CAACQ,GAAJ,CACIC,uBAAWE,UAAX,CAAsB;AAClB;AACAC,EAAAA,QAAQ,EAAE;AAFQ,CAAtB,CADJ;AAOA;;;;AAIA;;;;AAGAZ,GAAG,CAACQ,GAAJ,CAAQ,gBAAR,EAA0B,kCAA1B;AAGA;;;;AAGAR,GAAG,CAACQ,GAAJ,CAAQ,UAACK,GAAD,EAAMC,GAAN,EAAWC,GAAX,EAAgBC,IAAhB,EAAyB;AAC7B;AACA,MAAIH,GAAG,CAACI,OAAJ,KAAgB,CAACJ,GAAG,CAACI,OAAJ,CAAYC,OAAZ,CAAoB,WAApB,CAAD,IAAsC,CAACL,GAAG,CAACI,OAAJ,CAAYC,OAAZ,CAAoB,yBAApB,CAAvD,CAAJ,EAA6G;AACzG,WAAOF,IAAI,EAAX;AACH;;AACDG,EAAAA,OAAO,CAACC,KAAR,CAAcP,GAAG,CAACQ,KAAlB,EAL6B,CAM7B;;AACAN,EAAAA,GAAG,CAACO,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CACIV,GAAG,CAACI,OADR;AAGH,CAVD;AAYA;;;;AAGAjB,GAAG,CAACQ,GAAJ,CAAQ,UAACM,GAAD,EAAMC,GAAN,EAAWC,IAAX,EAAoB;AACxBD,EAAAA,GAAG,CAACO,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CACI,WADJ;AAGH,CAJD;AAMA;;;;AAGAvB,GAAG,CAACwB,MAAJ,CAAW1B,IAAX,EAAiB;AAAA,SAAMG,QAAQ,iCAA0BH,IAA1B,OAAd;AAAA,CAAjB",
      "sourceRoot": "/Users/aa/rn_applications/ocr-nodejs/src",
      "sourcesContent": [
        "import express from 'express';\nimport bodyParser from 'body-parser';\nimport mongoose from 'mongoose';\n// auth\n// logging\nimport debug from 'debug';\nimport morgan from 'morgan';\nimport cors from 'cors';\n// env\nimport * as dotEnv from 'dotenv';\nimport TesseractRoutes from \"./routes/TesseractRoutes\";\n// models\n\n\ndotEnv.config();\n\nconst {PORT} = process.env;\nconst port = PORT || 5000;\nconst mongodb_uri =  'mongodb://localhost:27017/ocr' ;\n\nconst app = express();\nconst debugApp = debug('app');\n\n/**\n * connecting to mongodb\n */\nmongoose.connect(\n    mongodb_uri,\n    {\n        useNewUrlParser: true,\n        useCreateIndex: true,\n        useUnifiedTopology: true,\n    }\n)\n    .then(() => debugApp('Connected Successfully to mongodb'))\n    .catch(() => debugApp(\"Can't connect to mongodb\"));\n\n\n/**\n * middlewares\n */\napp.use(morgan('tiny'));\napp.use(cors());\napp.use(bodyParser.json());\napp.use(\n    bodyParser.urlencoded({\n        // extended: true, // false\n        extended: false,\n    })\n);\n\n/**\n * passport middleware\n */\n\n/**\n * routes\n */\napp.use('/api/tessarect', TesseractRoutes());\n\n\n/**\n * Error handling\n */\napp.use((err, req, res, next) => {\n    // treat as 404\n    if (err.message && (~err.message.indexOf('not found') || (~err.message.indexOf('Cast to ObjectId failed')))) {\n        return next();\n    }\n    console.error(err.stack);\n    // error page\n    res.status(500).send(\n        err.message,\n    );\n});\n\n/**\n * assume 404 since no middleware responded\n */\napp.use((req, res, next) => {\n    res.status(404).send(\n        'not found'\n    );\n});\n\n/**\n * Listening to requests\n */\napp.listen(port, () => debugApp(`app listening on port ${port}!`));\n\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1577144902844
  },
  "{\"sourceRoot\":\"/Users/aa/rn_applications/ocr-nodejs/src/routes\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"/Users/aa/rn_applications/ocr-nodejs\",\"filename\":\"/Users/aa/rn_applications/ocr-nodejs/src/routes/TesseractRoutes.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/Users/aa/rn_applications/ocr-nodejs\",\"plugins\":[{\"key\":\"transform-runtime\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"MemberExpression\":{\"enter\":[null],\"exit\":[null]},\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.7.4:development": {
    "metadata": {},
    "options": {
      "sourceRoot": "/Users/aa/rn_applications/ocr-nodejs/src/routes",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "/Users/aa/rn_applications/ocr-nodejs",
      "filename": "/Users/aa/rn_applications/ocr-nodejs/src/routes/TesseractRoutes.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "/Users/aa/rn_applications/ocr-nodejs",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "transform-runtime",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "MemberExpression": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {}
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/Users/aa/rn_applications/ocr-nodejs/src/routes/TesseractRoutes.js",
        "plugins": [
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "/Users/aa/rn_applications/ocr-nodejs/src/routes/TesseractRoutes.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/Users/aa/rn_applications/ocr-nodejs/src/routes",
        "sourceFileName": "TesseractRoutes.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = void 0;\n\nvar _express = require(\"express\");\n\nvar _TesseractController = require(\"../controllers/TesseractController\");\n\nvar _default = function _default() {\n  var Router = (0, _express.Router)(); //test the image\n\n  Router.get('/', _TesseractController.getTextFromImage); //see all the images and data tha we have\n\n  Router.get('/all', _TesseractController.getAllImages); // get text by sending the imageName in body\n\n  Router.get('/name', _TesseractController.getTextFromImageWithImageName); //delete an image by imageName\n\n  Router[\"delete\"]('/', _TesseractController.deleteImageByName);\n  return Router;\n};\n\nexports[\"default\"] = _default;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIlRlc3NlcmFjdFJvdXRlcy5qcyJdLCJuYW1lcyI6WyJSb3V0ZXIiLCJnZXQiLCJnZXRUZXh0RnJvbUltYWdlIiwiZ2V0QWxsSW1hZ2VzIiwiZ2V0VGV4dEZyb21JbWFnZVdpdGhJbWFnZU5hbWUiLCJkZWxldGVJbWFnZUJ5TmFtZSJdLCJtYXBwaW5ncyI6Ijs7Ozs7OztBQUFBOztBQUNBOztlQVFlLG9CQUFNO0FBQ2pCLE1BQU1BLE1BQU0sR0FBRyxzQkFBZixDQURpQixDQUVqQjs7QUFDQUEsRUFBQUEsTUFBTSxDQUFDQyxHQUFQLENBQVcsR0FBWCxFQUNJQyxxQ0FESixFQUhpQixDQU9qQjs7QUFDQUYsRUFBQUEsTUFBTSxDQUFDQyxHQUFQLENBQVcsTUFBWCxFQUNJRSxpQ0FESixFQVJpQixDQVdqQjs7QUFDQUgsRUFBQUEsTUFBTSxDQUFDQyxHQUFQLENBQVcsT0FBWCxFQUNJRyxrREFESixFQVppQixDQWVqQjs7QUFDQUosRUFBQUEsTUFBTSxVQUFOLENBQWMsR0FBZCxFQUNJSyxzQ0FESjtBQUtBLFNBQU9MLE1BQVA7QUFDSCxDIiwic291cmNlUm9vdCI6Ii9Vc2Vycy9hYS9ybl9hcHBsaWNhdGlvbnMvb2NyLW5vZGVqcy9zcmMvcm91dGVzIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHtSb3V0ZXIgYXMgRXhwcmVzc1JvdXRlcn0gZnJvbSAnZXhwcmVzcyc7XG5pbXBvcnQge1xuICAgIGdldFRleHRGcm9tSW1hZ2UsXG4gICAgZ2V0VGV4dEZyb21JbWFnZVdpdGhJbWFnZU5hbWUsXG4gICAgZGVsZXRlSW1hZ2VCeU5hbWUsXG4gICAgZ2V0QWxsSW1hZ2VzXG59IGZyb20gJy4uL2NvbnRyb2xsZXJzL1Rlc3NlcmFjdENvbnRyb2xsZXInO1xuXG5cbmV4cG9ydCBkZWZhdWx0ICgpID0+IHtcbiAgICBjb25zdCBSb3V0ZXIgPSBFeHByZXNzUm91dGVyKCk7XG4gICAgLy90ZXN0IHRoZSBpbWFnZVxuICAgIFJvdXRlci5nZXQoJy8nLFxuICAgICAgICBnZXRUZXh0RnJvbUltYWdlXG4gICAgKTtcblxuICAgIC8vc2VlIGFsbCB0aGUgaW1hZ2VzIGFuZCBkYXRhIHRoYSB3ZSBoYXZlXG4gICAgUm91dGVyLmdldCgnL2FsbCcsXG4gICAgICAgIGdldEFsbEltYWdlcyk7XG5cbiAgICAvLyBnZXQgdGV4dCBieSBzZW5kaW5nIHRoZSBpbWFnZU5hbWUgaW4gYm9keVxuICAgIFJvdXRlci5nZXQoJy9uYW1lJyxcbiAgICAgICAgZ2V0VGV4dEZyb21JbWFnZVdpdGhJbWFnZU5hbWVcbiAgICApO1xuICAgIC8vZGVsZXRlIGFuIGltYWdlIGJ5IGltYWdlTmFtZVxuICAgIFJvdXRlci5kZWxldGUoJy8nLFxuICAgICAgICBkZWxldGVJbWFnZUJ5TmFtZVxuICAgICk7XG5cblxuICAgIHJldHVybiBSb3V0ZXI7XG59O1xuIl19",
    "map": {
      "version": 3,
      "sources": [
        "TesseractRoutes.js"
      ],
      "names": [
        "Router",
        "get",
        "getTextFromImage",
        "getAllImages",
        "getTextFromImageWithImageName",
        "deleteImageByName"
      ],
      "mappings": ";;;;;;;AAAA;;AACA;;eAQe,oBAAM;AACjB,MAAMA,MAAM,GAAG,sBAAf,CADiB,CAEjB;;AACAA,EAAAA,MAAM,CAACC,GAAP,CAAW,GAAX,EACIC,qCADJ,EAHiB,CAOjB;;AACAF,EAAAA,MAAM,CAACC,GAAP,CAAW,MAAX,EACIE,iCADJ,EARiB,CAWjB;;AACAH,EAAAA,MAAM,CAACC,GAAP,CAAW,OAAX,EACIG,kDADJ,EAZiB,CAejB;;AACAJ,EAAAA,MAAM,UAAN,CAAc,GAAd,EACIK,sCADJ;AAKA,SAAOL,MAAP;AACH,C",
      "sourceRoot": "/Users/aa/rn_applications/ocr-nodejs/src/routes",
      "sourcesContent": [
        "import {Router as ExpressRouter} from 'express';\nimport {\n    getTextFromImage,\n    getTextFromImageWithImageName,\n    deleteImageByName,\n    getAllImages\n} from '../controllers/TesseractController';\n\n\nexport default () => {\n    const Router = ExpressRouter();\n    //test the image\n    Router.get('/',\n        getTextFromImage\n    );\n\n    //see all the images and data tha we have\n    Router.get('/all',\n        getAllImages);\n\n    // get text by sending the imageName in body\n    Router.get('/name',\n        getTextFromImageWithImageName\n    );\n    //delete an image by imageName\n    Router.delete('/',\n        deleteImageByName\n    );\n\n\n    return Router;\n};\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1577129762824
  },
  "{\"sourceRoot\":\"/Users/aa/rn_applications/ocr-nodejs/src/controllers\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"/Users/aa/rn_applications/ocr-nodejs\",\"filename\":\"/Users/aa/rn_applications/ocr-nodejs/src/controllers/TesseractController.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/Users/aa/rn_applications/ocr-nodejs\",\"plugins\":[{\"key\":\"transform-runtime\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"MemberExpression\":{\"enter\":[null],\"exit\":[null]},\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.7.4:development": {
    "metadata": {},
    "options": {
      "sourceRoot": "/Users/aa/rn_applications/ocr-nodejs/src/controllers",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "/Users/aa/rn_applications/ocr-nodejs",
      "filename": "/Users/aa/rn_applications/ocr-nodejs/src/controllers/TesseractController.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "/Users/aa/rn_applications/ocr-nodejs",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "transform-runtime",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "MemberExpression": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {}
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/Users/aa/rn_applications/ocr-nodejs/src/controllers/TesseractController.js",
        "plugins": [
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "/Users/aa/rn_applications/ocr-nodejs/src/controllers/TesseractController.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/Users/aa/rn_applications/ocr-nodejs/src/controllers",
        "sourceFileName": "TesseractController.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.deleteImageByName = exports.getTextFromImageWithImageName = exports.getAllImages = exports.getTextFromImage = void 0;\n\nvar _TesseractSchema = _interopRequireDefault(require(\"../models/TesseractSchema\"));\n\nvar _nodeTesseractOcr = _interopRequireDefault(require(\"node-tesseract-ocr\"));\n\nvar config = {\n  lang: \"eng\",\n  oem: 1,\n  psm: 3\n}; //Function to get text from Image\n\nvar getTextFromImage = function getTextFromImage(req, res, next) {\n  //Put the image name here and put the image in Images Folder\n  var imageName = 'image';\n\n  _nodeTesseractOcr[\"default\"].recognize(process.cwd() + '/src/images/' + imageName + '.png', config).then(function (text) {\n    var newTesseract = new _TesseractSchema[\"default\"]({\n      imageName: imageName,\n      text: text\n    });\n    newTesseract.save().then(function (result) {\n      res.json(result);\n    })[\"catch\"](function (e) {\n      return next(e);\n    });\n  })[\"catch\"](function (e) {\n    next(e);\n  });\n}; //To get all the images\n\n\nexports.getTextFromImage = getTextFromImage;\n\nvar getAllImages = function getAllImages(req, res, next) {\n  try {\n    _TesseractSchema[\"default\"].find().then(function (images) {\n      res.json(images);\n    })[\"catch\"](function (e) {\n      return next(e);\n    });\n  } catch (e) {\n    console.log('error', e);\n  }\n}; //We send in request body the name of the image\n\n\nexports.getAllImages = getAllImages;\n\nvar getTextFromImageWithImageName = function getTextFromImageWithImageName(req, res, next) {\n  var imageName = req.body.imageName;\n\n  if (imageName) {\n    try {\n      _nodeTesseractOcr[\"default\"].recognize(__dirname + '../images/' + imageName + '.png', config).then(function (text) {\n        console.log(\"Result:\", text);\n        var newTesseract = new _TesseractSchema[\"default\"]({\n          imageName: imageName,\n          text: text\n        });\n        newTesseract.save().then(function (result) {\n          res.json(result);\n        })[\"catch\"](function (e) {\n          return next(e);\n        });\n      })[\"catch\"](function (e) {\n        next(e);\n      });\n    } catch (e) {\n      console.log('error', e);\n    }\n  } else {\n    res.status(404).send('no image found');\n  }\n}; //delete an image by name send in Body\n\n\nexports.getTextFromImageWithImageName = getTextFromImageWithImageName;\n\nvar deleteImageByName = function deleteImageByName(req, res, next) {\n  var imageName = req.body.imageName;\n\n  if (imageName) {\n    _TesseractSchema[\"default\"].findOneAndDelete({\n      imageName: imageName\n    }).then(function (deletedImage) {\n      res.json(deletedImage);\n    })[\"catch\"](function (e) {\n      return next(e);\n    });\n  } else {\n    res.status(404).send('no image found');\n  }\n};\n\nexports.deleteImageByName = deleteImageByName;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIlRlc3NlcmFjdENvbnRyb2xsZXIuanMiXSwibmFtZXMiOlsiY29uZmlnIiwibGFuZyIsIm9lbSIsInBzbSIsImdldFRleHRGcm9tSW1hZ2UiLCJyZXEiLCJyZXMiLCJuZXh0IiwiaW1hZ2VOYW1lIiwidGVzc2VyYWN0IiwicmVjb2duaXplIiwicHJvY2VzcyIsImN3ZCIsInRoZW4iLCJ0ZXh0IiwibmV3VGVzc2VyYWN0IiwiVGVzc2VyYWN0Iiwic2F2ZSIsInJlc3VsdCIsImpzb24iLCJlIiwiZ2V0QWxsSW1hZ2VzIiwiZmluZCIsImltYWdlcyIsImNvbnNvbGUiLCJsb2ciLCJnZXRUZXh0RnJvbUltYWdlV2l0aEltYWdlTmFtZSIsImJvZHkiLCJfX2Rpcm5hbWUiLCJzdGF0dXMiLCJzZW5kIiwiZGVsZXRlSW1hZ2VCeU5hbWUiLCJmaW5kT25lQW5kRGVsZXRlIiwiZGVsZXRlZEltYWdlIl0sIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7QUFBQTs7QUFDQTs7QUFFQSxJQUFNQSxNQUFNLEdBQUc7QUFDWEMsRUFBQUEsSUFBSSxFQUFFLEtBREs7QUFFWEMsRUFBQUEsR0FBRyxFQUFFLENBRk07QUFHWEMsRUFBQUEsR0FBRyxFQUFFO0FBSE0sQ0FBZixDLENBS0E7O0FBQ08sSUFBTUMsZ0JBQWdCLEdBQUcsU0FBbkJBLGdCQUFtQixDQUFDQyxHQUFELEVBQU1DLEdBQU4sRUFBV0MsSUFBWCxFQUFvQjtBQUVoRDtBQUNBLE1BQUlDLFNBQVMsR0FBRyxPQUFoQjs7QUFFQUMsK0JBQVVDLFNBQVYsQ0FBb0JDLE9BQU8sQ0FBQ0MsR0FBUixLQUFnQixjQUFoQixHQUFpQ0osU0FBakMsR0FBNkMsTUFBakUsRUFBeUVSLE1BQXpFLEVBQ0thLElBREwsQ0FDVSxVQUFBQyxJQUFJLEVBQUk7QUFDVixRQUFJQyxZQUFZLEdBQUcsSUFBSUMsMkJBQUosQ0FBYztBQUM3QlIsTUFBQUEsU0FBUyxFQUFFQSxTQURrQjtBQUU3Qk0sTUFBQUEsSUFBSSxFQUFFQTtBQUZ1QixLQUFkLENBQW5CO0FBSUFDLElBQUFBLFlBQVksQ0FBQ0UsSUFBYixHQUFvQkosSUFBcEIsQ0FBeUIsVUFBQUssTUFBTSxFQUFJO0FBQy9CWixNQUFBQSxHQUFHLENBQUNhLElBQUosQ0FBU0QsTUFBVDtBQUNILEtBRkQsV0FFUyxVQUFBRSxDQUFDO0FBQUEsYUFBSWIsSUFBSSxDQUFDYSxDQUFELENBQVI7QUFBQSxLQUZWO0FBR0gsR0FUTCxXQVVXLFVBQUFBLENBQUMsRUFBSTtBQUNSYixJQUFBQSxJQUFJLENBQUNhLENBQUQsQ0FBSjtBQUNILEdBWkw7QUFhSCxDQWxCTSxDLENBb0JQOzs7OztBQUNPLElBQU1DLFlBQVksR0FBRyxTQUFmQSxZQUFlLENBQUNoQixHQUFELEVBQU1DLEdBQU4sRUFBV0MsSUFBWCxFQUFvQjtBQUM1QyxNQUFJO0FBQ0FTLGdDQUFVTSxJQUFWLEdBQWlCVCxJQUFqQixDQUFzQixVQUFBVSxNQUFNLEVBQUk7QUFDNUJqQixNQUFBQSxHQUFHLENBQUNhLElBQUosQ0FBU0ksTUFBVDtBQUNILEtBRkQsV0FFUyxVQUFBSCxDQUFDO0FBQUEsYUFBSWIsSUFBSSxDQUFDYSxDQUFELENBQVI7QUFBQSxLQUZWO0FBR0gsR0FKRCxDQUlFLE9BQU9BLENBQVAsRUFBVTtBQUNSSSxJQUFBQSxPQUFPLENBQUNDLEdBQVIsQ0FBWSxPQUFaLEVBQXFCTCxDQUFyQjtBQUNIO0FBRUosQ0FUTSxDLENBV1A7Ozs7O0FBQ08sSUFBTU0sNkJBQTZCLEdBQUcsU0FBaENBLDZCQUFnQyxDQUFDckIsR0FBRCxFQUFNQyxHQUFOLEVBQVdDLElBQVgsRUFBb0I7QUFBQSxNQUV6REMsU0FGeUQsR0FHekRILEdBQUcsQ0FBQ3NCLElBSHFELENBRXpEbkIsU0FGeUQ7O0FBSTdELE1BQUlBLFNBQUosRUFBZTtBQUNYLFFBQUk7QUFDQUMsbUNBQVVDLFNBQVYsQ0FBb0JrQixTQUFTLEdBQUcsWUFBWixHQUEyQnBCLFNBQTNCLEdBQXVDLE1BQTNELEVBQW1FUixNQUFuRSxFQUNLYSxJQURMLENBQ1UsVUFBQUMsSUFBSSxFQUFJO0FBQ1ZVLFFBQUFBLE9BQU8sQ0FBQ0MsR0FBUixDQUFZLFNBQVosRUFBdUJYLElBQXZCO0FBQ0EsWUFBSUMsWUFBWSxHQUFHLElBQUlDLDJCQUFKLENBQWM7QUFDN0JSLFVBQUFBLFNBQVMsRUFBRUEsU0FEa0I7QUFFN0JNLFVBQUFBLElBQUksRUFBRUE7QUFGdUIsU0FBZCxDQUFuQjtBQUtBQyxRQUFBQSxZQUFZLENBQUNFLElBQWIsR0FBb0JKLElBQXBCLENBQXlCLFVBQUFLLE1BQU0sRUFBSTtBQUMvQlosVUFBQUEsR0FBRyxDQUFDYSxJQUFKLENBQVNELE1BQVQ7QUFDSCxTQUZELFdBRVMsVUFBQUUsQ0FBQztBQUFBLGlCQUFJYixJQUFJLENBQUNhLENBQUQsQ0FBUjtBQUFBLFNBRlY7QUFHSCxPQVhMLFdBWVcsVUFBQUEsQ0FBQyxFQUFJO0FBQ1JiLFFBQUFBLElBQUksQ0FBQ2EsQ0FBRCxDQUFKO0FBQ0gsT0FkTDtBQWVILEtBaEJELENBZ0JFLE9BQU9BLENBQVAsRUFBVTtBQUNSSSxNQUFBQSxPQUFPLENBQUNDLEdBQVIsQ0FBWSxPQUFaLEVBQXFCTCxDQUFyQjtBQUNIO0FBRUosR0FyQkQsTUFxQk87QUFDSGQsSUFBQUEsR0FBRyxDQUFDdUIsTUFBSixDQUFXLEdBQVgsRUFBZ0JDLElBQWhCLENBQXFCLGdCQUFyQjtBQUNIO0FBQ0osQ0E1Qk0sQyxDQThCUDs7Ozs7QUFDTyxJQUFNQyxpQkFBaUIsR0FBRyxTQUFwQkEsaUJBQW9CLENBQUMxQixHQUFELEVBQU1DLEdBQU4sRUFBV0MsSUFBWCxFQUFvQjtBQUFBLE1BRTdDQyxTQUY2QyxHQUc3Q0gsR0FBRyxDQUFDc0IsSUFIeUMsQ0FFN0NuQixTQUY2Qzs7QUFJakQsTUFBSUEsU0FBSixFQUFlO0FBQ1hRLGdDQUFVZ0IsZ0JBQVYsQ0FBMkI7QUFBQ3hCLE1BQUFBLFNBQVMsRUFBRUE7QUFBWixLQUEzQixFQUFtREssSUFBbkQsQ0FBd0QsVUFBQW9CLFlBQVksRUFBSTtBQUNwRTNCLE1BQUFBLEdBQUcsQ0FBQ2EsSUFBSixDQUFTYyxZQUFUO0FBQ0gsS0FGRCxXQUVTLFVBQUFiLENBQUM7QUFBQSxhQUFJYixJQUFJLENBQUNhLENBQUQsQ0FBUjtBQUFBLEtBRlY7QUFHSCxHQUpELE1BSU87QUFDSGQsSUFBQUEsR0FBRyxDQUFDdUIsTUFBSixDQUFXLEdBQVgsRUFBZ0JDLElBQWhCLENBQXFCLGdCQUFyQjtBQUNIO0FBQ0osQ0FYTSIsInNvdXJjZVJvb3QiOiIvVXNlcnMvYWEvcm5fYXBwbGljYXRpb25zL29jci1ub2RlanMvc3JjL2NvbnRyb2xsZXJzIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IFRlc3NlcmFjdCBmcm9tICcuLi9tb2RlbHMvVGVzc2VyYWN0U2NoZW1hJztcbmltcG9ydCB0ZXNzZXJhY3QgZnJvbSBcIm5vZGUtdGVzc2VyYWN0LW9jclwiO1xuXG5jb25zdCBjb25maWcgPSB7XG4gICAgbGFuZzogXCJlbmdcIixcbiAgICBvZW06IDEsXG4gICAgcHNtOiAzLFxufTtcbi8vRnVuY3Rpb24gdG8gZ2V0IHRleHQgZnJvbSBJbWFnZVxuZXhwb3J0IGNvbnN0IGdldFRleHRGcm9tSW1hZ2UgPSAocmVxLCByZXMsIG5leHQpID0+IHtcblxuICAgIC8vUHV0IHRoZSBpbWFnZSBuYW1lIGhlcmUgYW5kIHB1dCB0aGUgaW1hZ2UgaW4gSW1hZ2VzIEZvbGRlclxuICAgIGxldCBpbWFnZU5hbWUgPSAnaW1hZ2UnO1xuXG4gICAgdGVzc2VyYWN0LnJlY29nbml6ZShwcm9jZXNzLmN3ZCgpICsgJy9zcmMvaW1hZ2VzLycgKyBpbWFnZU5hbWUgKyAnLnBuZycsIGNvbmZpZylcbiAgICAgICAgLnRoZW4odGV4dCA9PiB7XG4gICAgICAgICAgICBsZXQgbmV3VGVzc2VyYWN0ID0gbmV3IFRlc3NlcmFjdCh7XG4gICAgICAgICAgICAgICAgaW1hZ2VOYW1lOiBpbWFnZU5hbWUsXG4gICAgICAgICAgICAgICAgdGV4dDogdGV4dCxcbiAgICAgICAgICAgIH0pO1xuICAgICAgICAgICAgbmV3VGVzc2VyYWN0LnNhdmUoKS50aGVuKHJlc3VsdCA9PiB7XG4gICAgICAgICAgICAgICAgcmVzLmpzb24ocmVzdWx0KTtcbiAgICAgICAgICAgIH0pLmNhdGNoKGUgPT4gbmV4dChlKSk7XG4gICAgICAgIH0pXG4gICAgICAgIC5jYXRjaChlID0+IHtcbiAgICAgICAgICAgIG5leHQoZSlcbiAgICAgICAgfSk7XG59O1xuXG4vL1RvIGdldCBhbGwgdGhlIGltYWdlc1xuZXhwb3J0IGNvbnN0IGdldEFsbEltYWdlcyA9IChyZXEsIHJlcywgbmV4dCkgPT4ge1xuICAgIHRyeSB7XG4gICAgICAgIFRlc3NlcmFjdC5maW5kKCkudGhlbihpbWFnZXMgPT4ge1xuICAgICAgICAgICAgcmVzLmpzb24oaW1hZ2VzKTtcbiAgICAgICAgfSkuY2F0Y2goZSA9PiBuZXh0KGUpKTtcbiAgICB9IGNhdGNoIChlKSB7XG4gICAgICAgIGNvbnNvbGUubG9nKCdlcnJvcicsIGUpO1xuICAgIH1cblxufTtcblxuLy9XZSBzZW5kIGluIHJlcXVlc3QgYm9keSB0aGUgbmFtZSBvZiB0aGUgaW1hZ2VcbmV4cG9ydCBjb25zdCBnZXRUZXh0RnJvbUltYWdlV2l0aEltYWdlTmFtZSA9IChyZXEsIHJlcywgbmV4dCkgPT4ge1xuICAgIGxldCB7XG4gICAgICAgIGltYWdlTmFtZVxuICAgIH0gPSByZXEuYm9keTtcbiAgICBpZiAoaW1hZ2VOYW1lKSB7XG4gICAgICAgIHRyeSB7XG4gICAgICAgICAgICB0ZXNzZXJhY3QucmVjb2duaXplKF9fZGlybmFtZSArICcuLi9pbWFnZXMvJyArIGltYWdlTmFtZSArICcucG5nJywgY29uZmlnKVxuICAgICAgICAgICAgICAgIC50aGVuKHRleHQgPT4ge1xuICAgICAgICAgICAgICAgICAgICBjb25zb2xlLmxvZyhcIlJlc3VsdDpcIiwgdGV4dCk7XG4gICAgICAgICAgICAgICAgICAgIGxldCBuZXdUZXNzZXJhY3QgPSBuZXcgVGVzc2VyYWN0KHtcbiAgICAgICAgICAgICAgICAgICAgICAgIGltYWdlTmFtZTogaW1hZ2VOYW1lLFxuICAgICAgICAgICAgICAgICAgICAgICAgdGV4dDogdGV4dCxcbiAgICAgICAgICAgICAgICAgICAgfSk7XG5cbiAgICAgICAgICAgICAgICAgICAgbmV3VGVzc2VyYWN0LnNhdmUoKS50aGVuKHJlc3VsdCA9PiB7XG4gICAgICAgICAgICAgICAgICAgICAgICByZXMuanNvbihyZXN1bHQpO1xuICAgICAgICAgICAgICAgICAgICB9KS5jYXRjaChlID0+IG5leHQoZSkpO1xuICAgICAgICAgICAgICAgIH0pXG4gICAgICAgICAgICAgICAgLmNhdGNoKGUgPT4ge1xuICAgICAgICAgICAgICAgICAgICBuZXh0KGUpXG4gICAgICAgICAgICAgICAgfSk7XG4gICAgICAgIH0gY2F0Y2ggKGUpIHtcbiAgICAgICAgICAgIGNvbnNvbGUubG9nKCdlcnJvcicsIGUpO1xuICAgICAgICB9XG5cbiAgICB9IGVsc2Uge1xuICAgICAgICByZXMuc3RhdHVzKDQwNCkuc2VuZCgnbm8gaW1hZ2UgZm91bmQnKTtcbiAgICB9XG59O1xuXG4vL2RlbGV0ZSBhbiBpbWFnZSBieSBuYW1lIHNlbmQgaW4gQm9keVxuZXhwb3J0IGNvbnN0IGRlbGV0ZUltYWdlQnlOYW1lID0gKHJlcSwgcmVzLCBuZXh0KSA9PiB7XG4gICAgbGV0IHtcbiAgICAgICAgaW1hZ2VOYW1lXG4gICAgfSA9IHJlcS5ib2R5O1xuICAgIGlmIChpbWFnZU5hbWUpIHtcbiAgICAgICAgVGVzc2VyYWN0LmZpbmRPbmVBbmREZWxldGUoe2ltYWdlTmFtZTogaW1hZ2VOYW1lfSkudGhlbihkZWxldGVkSW1hZ2UgPT4ge1xuICAgICAgICAgICAgcmVzLmpzb24oZGVsZXRlZEltYWdlKTtcbiAgICAgICAgfSkuY2F0Y2goZSA9PiBuZXh0KGUpKTtcbiAgICB9IGVsc2Uge1xuICAgICAgICByZXMuc3RhdHVzKDQwNCkuc2VuZCgnbm8gaW1hZ2UgZm91bmQnKTtcbiAgICB9XG59O1xuXG4iXX0=",
    "map": {
      "version": 3,
      "sources": [
        "TesseractController.js"
      ],
      "names": [
        "config",
        "lang",
        "oem",
        "psm",
        "getTextFromImage",
        "req",
        "res",
        "next",
        "imageName",
        "tesseract",
        "recognize",
        "process",
        "cwd",
        "then",
        "text",
        "newTesseract",
        "Tesseract",
        "save",
        "result",
        "json",
        "e",
        "getAllImages",
        "find",
        "images",
        "console",
        "log",
        "getTextFromImageWithImageName",
        "body",
        "__dirname",
        "status",
        "send",
        "deleteImageByName",
        "findOneAndDelete",
        "deletedImage"
      ],
      "mappings": ";;;;;;;;;AAAA;;AACA;;AAEA,IAAMA,MAAM,GAAG;AACXC,EAAAA,IAAI,EAAE,KADK;AAEXC,EAAAA,GAAG,EAAE,CAFM;AAGXC,EAAAA,GAAG,EAAE;AAHM,CAAf,C,CAKA;;AACO,IAAMC,gBAAgB,GAAG,SAAnBA,gBAAmB,CAACC,GAAD,EAAMC,GAAN,EAAWC,IAAX,EAAoB;AAEhD;AACA,MAAIC,SAAS,GAAG,OAAhB;;AAEAC,+BAAUC,SAAV,CAAoBC,OAAO,CAACC,GAAR,KAAgB,cAAhB,GAAiCJ,SAAjC,GAA6C,MAAjE,EAAyER,MAAzE,EACKa,IADL,CACU,UAAAC,IAAI,EAAI;AACV,QAAIC,YAAY,GAAG,IAAIC,2BAAJ,CAAc;AAC7BR,MAAAA,SAAS,EAAEA,SADkB;AAE7BM,MAAAA,IAAI,EAAEA;AAFuB,KAAd,CAAnB;AAIAC,IAAAA,YAAY,CAACE,IAAb,GAAoBJ,IAApB,CAAyB,UAAAK,MAAM,EAAI;AAC/BZ,MAAAA,GAAG,CAACa,IAAJ,CAASD,MAAT;AACH,KAFD,WAES,UAAAE,CAAC;AAAA,aAAIb,IAAI,CAACa,CAAD,CAAR;AAAA,KAFV;AAGH,GATL,WAUW,UAAAA,CAAC,EAAI;AACRb,IAAAA,IAAI,CAACa,CAAD,CAAJ;AACH,GAZL;AAaH,CAlBM,C,CAoBP;;;;;AACO,IAAMC,YAAY,GAAG,SAAfA,YAAe,CAAChB,GAAD,EAAMC,GAAN,EAAWC,IAAX,EAAoB;AAC5C,MAAI;AACAS,gCAAUM,IAAV,GAAiBT,IAAjB,CAAsB,UAAAU,MAAM,EAAI;AAC5BjB,MAAAA,GAAG,CAACa,IAAJ,CAASI,MAAT;AACH,KAFD,WAES,UAAAH,CAAC;AAAA,aAAIb,IAAI,CAACa,CAAD,CAAR;AAAA,KAFV;AAGH,GAJD,CAIE,OAAOA,CAAP,EAAU;AACRI,IAAAA,OAAO,CAACC,GAAR,CAAY,OAAZ,EAAqBL,CAArB;AACH;AAEJ,CATM,C,CAWP;;;;;AACO,IAAMM,6BAA6B,GAAG,SAAhCA,6BAAgC,CAACrB,GAAD,EAAMC,GAAN,EAAWC,IAAX,EAAoB;AAAA,MAEzDC,SAFyD,GAGzDH,GAAG,CAACsB,IAHqD,CAEzDnB,SAFyD;;AAI7D,MAAIA,SAAJ,EAAe;AACX,QAAI;AACAC,mCAAUC,SAAV,CAAoBkB,SAAS,GAAG,YAAZ,GAA2BpB,SAA3B,GAAuC,MAA3D,EAAmER,MAAnE,EACKa,IADL,CACU,UAAAC,IAAI,EAAI;AACVU,QAAAA,OAAO,CAACC,GAAR,CAAY,SAAZ,EAAuBX,IAAvB;AACA,YAAIC,YAAY,GAAG,IAAIC,2BAAJ,CAAc;AAC7BR,UAAAA,SAAS,EAAEA,SADkB;AAE7BM,UAAAA,IAAI,EAAEA;AAFuB,SAAd,CAAnB;AAKAC,QAAAA,YAAY,CAACE,IAAb,GAAoBJ,IAApB,CAAyB,UAAAK,MAAM,EAAI;AAC/BZ,UAAAA,GAAG,CAACa,IAAJ,CAASD,MAAT;AACH,SAFD,WAES,UAAAE,CAAC;AAAA,iBAAIb,IAAI,CAACa,CAAD,CAAR;AAAA,SAFV;AAGH,OAXL,WAYW,UAAAA,CAAC,EAAI;AACRb,QAAAA,IAAI,CAACa,CAAD,CAAJ;AACH,OAdL;AAeH,KAhBD,CAgBE,OAAOA,CAAP,EAAU;AACRI,MAAAA,OAAO,CAACC,GAAR,CAAY,OAAZ,EAAqBL,CAArB;AACH;AAEJ,GArBD,MAqBO;AACHd,IAAAA,GAAG,CAACuB,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB,gBAArB;AACH;AACJ,CA5BM,C,CA8BP;;;;;AACO,IAAMC,iBAAiB,GAAG,SAApBA,iBAAoB,CAAC1B,GAAD,EAAMC,GAAN,EAAWC,IAAX,EAAoB;AAAA,MAE7CC,SAF6C,GAG7CH,GAAG,CAACsB,IAHyC,CAE7CnB,SAF6C;;AAIjD,MAAIA,SAAJ,EAAe;AACXQ,gCAAUgB,gBAAV,CAA2B;AAACxB,MAAAA,SAAS,EAAEA;AAAZ,KAA3B,EAAmDK,IAAnD,CAAwD,UAAAoB,YAAY,EAAI;AACpE3B,MAAAA,GAAG,CAACa,IAAJ,CAASc,YAAT;AACH,KAFD,WAES,UAAAb,CAAC;AAAA,aAAIb,IAAI,CAACa,CAAD,CAAR;AAAA,KAFV;AAGH,GAJD,MAIO;AACHd,IAAAA,GAAG,CAACuB,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB,gBAArB;AACH;AACJ,CAXM",
      "sourceRoot": "/Users/aa/rn_applications/ocr-nodejs/src/controllers",
      "sourcesContent": [
        "import Tesseract from '../models/TesseractSchema';\nimport tesseract from \"node-tesseract-ocr\";\n\nconst config = {\n    lang: \"eng\",\n    oem: 1,\n    psm: 3,\n};\n//Function to get text from Image\nexport const getTextFromImage = (req, res, next) => {\n\n    //Put the image name here and put the image in Images Folder\n    let imageName = 'image';\n\n    tesseract.recognize(process.cwd() + '/src/images/' + imageName + '.png', config)\n        .then(text => {\n            let newTesseract = new Tesseract({\n                imageName: imageName,\n                text: text,\n            });\n            newTesseract.save().then(result => {\n                res.json(result);\n            }).catch(e => next(e));\n        })\n        .catch(e => {\n            next(e)\n        });\n};\n\n//To get all the images\nexport const getAllImages = (req, res, next) => {\n    try {\n        Tesseract.find().then(images => {\n            res.json(images);\n        }).catch(e => next(e));\n    } catch (e) {\n        console.log('error', e);\n    }\n\n};\n\n//We send in request body the name of the image\nexport const getTextFromImageWithImageName = (req, res, next) => {\n    let {\n        imageName\n    } = req.body;\n    if (imageName) {\n        try {\n            tesseract.recognize(__dirname + '../images/' + imageName + '.png', config)\n                .then(text => {\n                    console.log(\"Result:\", text);\n                    let newTesseract = new Tesseract({\n                        imageName: imageName,\n                        text: text,\n                    });\n\n                    newTesseract.save().then(result => {\n                        res.json(result);\n                    }).catch(e => next(e));\n                })\n                .catch(e => {\n                    next(e)\n                });\n        } catch (e) {\n            console.log('error', e);\n        }\n\n    } else {\n        res.status(404).send('no image found');\n    }\n};\n\n//delete an image by name send in Body\nexport const deleteImageByName = (req, res, next) => {\n    let {\n        imageName\n    } = req.body;\n    if (imageName) {\n        Tesseract.findOneAndDelete({imageName: imageName}).then(deletedImage => {\n            res.json(deletedImage);\n        }).catch(e => next(e));\n    } else {\n        res.status(404).send('no image found');\n    }\n};\n\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1577144913294
  },
  "{\"sourceRoot\":\"/Users/aa/rn_applications/ocr-nodejs/src/models\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"/Users/aa/rn_applications/ocr-nodejs\",\"filename\":\"/Users/aa/rn_applications/ocr-nodejs/src/models/TesseractSchema.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/Users/aa/rn_applications/ocr-nodejs\",\"plugins\":[{\"key\":\"transform-runtime\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"MemberExpression\":{\"enter\":[null],\"exit\":[null]},\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.7.4:development": {
    "metadata": {},
    "options": {
      "sourceRoot": "/Users/aa/rn_applications/ocr-nodejs/src/models",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "/Users/aa/rn_applications/ocr-nodejs",
      "filename": "/Users/aa/rn_applications/ocr-nodejs/src/models/TesseractSchema.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "/Users/aa/rn_applications/ocr-nodejs",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "transform-runtime",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "MemberExpression": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {}
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/Users/aa/rn_applications/ocr-nodejs/src/models/TesseractSchema.js",
        "plugins": [
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "/Users/aa/rn_applications/ocr-nodejs/src/models/TesseractSchema.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/Users/aa/rn_applications/ocr-nodejs/src/models",
        "sourceFileName": "TesseractSchema.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nvar _interopRequireWildcard = require(\"@babel/runtime/helpers/interopRequireWildcard\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = void 0;\n\nvar _mongoose = _interopRequireWildcard(require(\"mongoose\"));\n\n//The schema of Tesseract needed for this test\nvar TesseractSchema = new _mongoose.Schema({\n  imageName: {\n    type: String,\n    required: true,\n    unique: true\n  },\n  text: {\n    type: String\n  }\n});\n\nvar _default = _mongoose[\"default\"].model('Tesseract', TesseractSchema);\n\nexports[\"default\"] = _default;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIlRlc3NlcmFjdFNjaGVtYS5qcyJdLCJuYW1lcyI6WyJUZXNzZXJhY3RTY2hlbWEiLCJTY2hlbWEiLCJpbWFnZU5hbWUiLCJ0eXBlIiwiU3RyaW5nIiwicmVxdWlyZWQiLCJ1bmlxdWUiLCJ0ZXh0IiwibW9uZ29vc2UiLCJtb2RlbCJdLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7O0FBQUE7O0FBR0E7QUFDQSxJQUFNQSxlQUFlLEdBQUcsSUFBSUMsZ0JBQUosQ0FBVztBQUUvQkMsRUFBQUEsU0FBUyxFQUFFO0FBQ1BDLElBQUFBLElBQUksRUFBRUMsTUFEQztBQUVQQyxJQUFBQSxRQUFRLEVBQUUsSUFGSDtBQUdQQyxJQUFBQSxNQUFNLEVBQUU7QUFIRCxHQUZvQjtBQU8vQkMsRUFBQUEsSUFBSSxFQUFFO0FBQ0ZKLElBQUFBLElBQUksRUFBRUM7QUFESjtBQVB5QixDQUFYLENBQXhCOztlQWFlSSxxQkFBU0MsS0FBVCxDQUFlLFdBQWYsRUFBNEJULGVBQTVCLEMiLCJzb3VyY2VSb290IjoiL1VzZXJzL2FhL3JuX2FwcGxpY2F0aW9ucy9vY3Itbm9kZWpzL3NyYy9tb2RlbHMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgbW9uZ29vc2UsIHtTY2hlbWF9IGZyb20gJ21vbmdvb3NlJztcblxuXG4vL1RoZSBzY2hlbWEgb2YgVGVzc2VyYWN0IG5lZWRlZCBmb3IgdGhpcyB0ZXN0XG5jb25zdCBUZXNzZXJhY3RTY2hlbWEgPSBuZXcgU2NoZW1hKHtcblxuICAgIGltYWdlTmFtZToge1xuICAgICAgICB0eXBlOiBTdHJpbmcsXG4gICAgICAgIHJlcXVpcmVkOiB0cnVlLFxuICAgICAgICB1bmlxdWU6IHRydWUsXG4gICAgfSxcbiAgICB0ZXh0OiB7XG4gICAgICAgIHR5cGU6IFN0cmluZyxcbiAgICB9LFxuXG59KTtcblxuZXhwb3J0IGRlZmF1bHQgbW9uZ29vc2UubW9kZWwoJ1Rlc3NlcmFjdCcsIFRlc3NlcmFjdFNjaGVtYSk7XG4iXX0=",
    "map": {
      "version": 3,
      "sources": [
        "TesseractSchema.js"
      ],
      "names": [
        "TesseractSchema",
        "Schema",
        "imageName",
        "type",
        "String",
        "required",
        "unique",
        "text",
        "mongoose",
        "model"
      ],
      "mappings": ";;;;;;;;;AAAA;;AAGA;AACA,IAAMA,eAAe,GAAG,IAAIC,gBAAJ,CAAW;AAE/BC,EAAAA,SAAS,EAAE;AACPC,IAAAA,IAAI,EAAEC,MADC;AAEPC,IAAAA,QAAQ,EAAE,IAFH;AAGPC,IAAAA,MAAM,EAAE;AAHD,GAFoB;AAO/BC,EAAAA,IAAI,EAAE;AACFJ,IAAAA,IAAI,EAAEC;AADJ;AAPyB,CAAX,CAAxB;;eAaeI,qBAASC,KAAT,CAAe,WAAf,EAA4BT,eAA5B,C",
      "sourceRoot": "/Users/aa/rn_applications/ocr-nodejs/src/models",
      "sourcesContent": [
        "import mongoose, {Schema} from 'mongoose';\n\n\n//The schema of Tesseract needed for this test\nconst TesseractSchema = new Schema({\n\n    imageName: {\n        type: String,\n        required: true,\n        unique: true,\n    },\n    text: {\n        type: String,\n    },\n\n});\n\nexport default mongoose.model('Tesseract', TesseractSchema);\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1577129762822
  }
}